<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="port_8cc" kind="file" language="C++">
    <compoundname>port.cc</compoundname>
    <includes refid="port_8hh" local="yes">reactor-cpp/port.hh</includes>
    <includes refid="assert_8hh" local="yes">reactor-cpp/assert.hh</includes>
    <includes refid="environment_8hh" local="yes">reactor-cpp/environment.hh</includes>
    <includes refid="reaction_8hh" local="yes">reactor-cpp/reaction.hh</includes>
    <incdepgraph>
      <node id="474">
        <label>functional</label>
      </node>
      <node id="468">
        <label>cassert</label>
      </node>
      <node id="469">
        <label>stdexcept</label>
      </node>
      <node id="458">
        <label>string</label>
      </node>
      <node id="454">
        <label>reactor-cpp/port.hh</label>
        <link refid="port_8hh"/>
        <childnode refid="455" relation="include">
        </childnode>
        <childnode refid="456" relation="include">
        </childnode>
        <childnode refid="463" relation="include">
        </childnode>
        <childnode refid="466" relation="include">
        </childnode>
      </node>
      <node id="476">
        <label>map</label>
      </node>
      <node id="467">
        <label>../assert.hh</label>
        <link refid="assert_8hh"/>
        <childnode refid="468" relation="include">
        </childnode>
        <childnode refid="457" relation="include">
        </childnode>
        <childnode refid="469" relation="include">
        </childnode>
        <childnode refid="458" relation="include">
        </childnode>
      </node>
      <node id="459">
        <label>fwd.hh</label>
        <link refid="fwd_8hh"/>
      </node>
      <node id="480">
        <label>reactor-cpp/reaction.hh</label>
        <link refid="reaction_8hh"/>
        <childnode refid="474" relation="include">
        </childnode>
        <childnode refid="455" relation="include">
        </childnode>
        <childnode refid="456" relation="include">
        </childnode>
      </node>
      <node id="453">
        <label>/home/runner/work/reactor-cpp/reactor-cpp/lib/port.cc</label>
        <link refid="port_8cc"/>
        <childnode refid="454" relation="include">
        </childnode>
        <childnode refid="467" relation="include">
        </childnode>
        <childnode refid="470" relation="include">
        </childnode>
        <childnode refid="480" relation="include">
        </childnode>
      </node>
      <node id="473">
        <label>condition_variable</label>
      </node>
      <node id="479">
        <label>logical_time.hh</label>
        <link refid="logical__time_8hh"/>
        <childnode refid="460" relation="include">
        </childnode>
      </node>
      <node id="475">
        <label>future</label>
      </node>
      <node id="471">
        <label>vector</label>
      </node>
      <node id="463">
        <label>value_ptr.hh</label>
        <link refid="value__ptr_8hh"/>
        <childnode refid="464" relation="include">
        </childnode>
        <childnode refid="465" relation="include">
        </childnode>
      </node>
      <node id="457">
        <label>sstream</label>
      </node>
      <node id="472">
        <label>scheduler.hh</label>
        <link refid="scheduler_8hh"/>
        <childnode refid="473" relation="include">
        </childnode>
        <childnode refid="474" relation="include">
        </childnode>
        <childnode refid="475" relation="include">
        </childnode>
        <childnode refid="476" relation="include">
        </childnode>
        <childnode refid="477" relation="include">
        </childnode>
        <childnode refid="455" relation="include">
        </childnode>
        <childnode refid="478" relation="include">
        </childnode>
        <childnode refid="471" relation="include">
        </childnode>
        <childnode refid="459" relation="include">
        </childnode>
        <childnode refid="479" relation="include">
        </childnode>
      </node>
      <node id="462">
        <label>iostream</label>
      </node>
      <node id="460">
        <label>time.hh</label>
        <link refid="time_8hh"/>
        <childnode refid="461" relation="include">
        </childnode>
        <childnode refid="462" relation="include">
        </childnode>
      </node>
      <node id="477">
        <label>mutex</label>
      </node>
      <node id="461">
        <label>chrono</label>
      </node>
      <node id="478">
        <label>thread</label>
      </node>
      <node id="456">
        <label>reactor.hh</label>
        <link refid="reactor_8hh"/>
        <childnode refid="455" relation="include">
        </childnode>
        <childnode refid="457" relation="include">
        </childnode>
        <childnode refid="458" relation="include">
        </childnode>
        <childnode refid="459" relation="include">
        </childnode>
        <childnode refid="460" relation="include">
        </childnode>
      </node>
      <node id="465">
        <label>type_traits</label>
      </node>
      <node id="455">
        <label>set</label>
      </node>
      <node id="466">
        <label>impl/port_impl.hh</label>
        <link refid="port__impl_8hh"/>
        <childnode refid="467" relation="include">
        </childnode>
        <childnode refid="470" relation="include">
        </childnode>
      </node>
      <node id="470">
        <label>../environment.hh</label>
        <link refid="environment_8hh"/>
        <childnode refid="455" relation="include">
        </childnode>
        <childnode refid="458" relation="include">
        </childnode>
        <childnode refid="471" relation="include">
        </childnode>
        <childnode refid="456" relation="include">
        </childnode>
        <childnode refid="472" relation="include">
        </childnode>
      </node>
      <node id="464">
        <label>memory</label>
      </node>
    </incdepgraph>
    <innernamespace refid="namespacereactor">reactor</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>(C)<sp/>2019<sp/>TU<sp/>Dresden</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*<sp/>All<sp/>rights<sp/>reserved.</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*<sp/>Authors:</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*<sp/><sp/><sp/>Christian<sp/>Menard</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="port_8hh" kindref="compound">reactor-cpp/port.hh</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="assert_8hh" kindref="compound">reactor-cpp/assert.hh</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="environment_8hh" kindref="compound">reactor-cpp/environment.hh</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="reaction_8hh" kindref="compound">reactor-cpp/reaction.hh</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespacereactor" kindref="compound">reactor</ref><sp/>{</highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classreactor_1_1BasePort_1a58886ca9004547c85b06e7803d0530b1" kindref="member">BasePort::base_bind_to</ref>(BasePort*<sp/>port)<sp/>{</highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/><ref refid="assert_8hh_1aca68c0d4ac8df0838e209fb5300f7be3" kindref="member">ASSERT</ref>(port<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/><ref refid="assert_8hh_1aca68c0d4ac8df0838e209fb5300f7be3" kindref="member">ASSERT</ref>(this-&gt;<ref refid="classreactor_1_1ReactorElement_1a895b09f977450723c59b67b41e643db8" kindref="member">environment</ref>()<sp/>==<sp/>port-&gt;environment());</highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><ref refid="assert_8hh_1aa8944c5f0d4c2f0c3643c36ab4967a17" kindref="member">VALIDATE</ref>(!port-&gt;has_inward_binding(),<sp/></highlight><highlight class="stringliteral">&quot;Ports<sp/>may<sp/>only<sp/>be<sp/>connected<sp/>once&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><ref refid="assert_8hh_1aa8944c5f0d4c2f0c3643c36ab4967a17" kindref="member">VALIDATE</ref>(!this-&gt;<ref refid="classreactor_1_1BasePort_1a687c0460c4823d90d150c6a363e256a9" kindref="member">has_dependencies</ref>(),</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Ports<sp/>with<sp/>dependencies<sp/>may<sp/>not<sp/>be<sp/>connected<sp/>to<sp/>other<sp/>ports&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><ref refid="assert_8hh_1aa8944c5f0d4c2f0c3643c36ab4967a17" kindref="member">VALIDATE</ref>(!port-&gt;has_antidependencies(),</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Ports<sp/>with<sp/>antidependencies<sp/>may<sp/>not<sp/>be<sp/>connected<sp/>to<sp/>other<sp/>ports&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><ref refid="assert_8hh_1aa8944c5f0d4c2f0c3643c36ab4967a17" kindref="member">VALIDATE</ref>(this-&gt;<ref refid="classreactor_1_1ReactorElement_1a895b09f977450723c59b67b41e643db8" kindref="member">environment</ref>()-&gt;phase()<sp/>==<sp/><ref refid="classreactor_1_1Environment_1a2f0bcf10490e174246fc14b456fb0755a2a0d30cb1153031c3dfc239c6e0407ea" kindref="member">Environment::Phase::Construction</ref>,</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Ports<sp/>can<sp/>only<sp/>be<sp/>bound<sp/>during<sp/>contruction<sp/>phase!&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(this-&gt;<ref refid="classreactor_1_1BasePort_1ad488760a5ed50b9bbf137d4e52c053f7" kindref="member">is_input</ref>()<sp/>&amp;&amp;<sp/>port-&gt;is_input())<sp/>{</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="assert_8hh_1aa8944c5f0d4c2f0c3643c36ab4967a17" kindref="member">VALIDATE</ref>(</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;<ref refid="classreactor_1_1ReactorElement_1a25bf298de879a82eefc1ba426be05812" kindref="member">container</ref>()<sp/>==<sp/>port-&gt;<ref refid="classreactor_1_1ReactorElement_1a25bf298de879a82eefc1ba426be05812" kindref="member">container</ref>()-&gt;<ref refid="classreactor_1_1ReactorElement_1a25bf298de879a82eefc1ba426be05812" kindref="member">container</ref>(),</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;An<sp/>input<sp/>port<sp/>A<sp/>may<sp/>only<sp/>be<sp/>bound<sp/>to<sp/>another<sp/>input<sp/>port<sp/>B<sp/>if<sp/>B<sp/>is<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;contained<sp/>by<sp/>a<sp/>reactor<sp/>that<sp/>in<sp/>turn<sp/>is<sp/>contained<sp/>by<sp/>the<sp/>reactor<sp/>of<sp/>A&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(this-&gt;<ref refid="classreactor_1_1BasePort_1ad5ebded21426bfcf02359b1ab3fdf7d8" kindref="member">is_output</ref>()<sp/>&amp;&amp;<sp/>port-&gt;is_input())<sp/>{</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="assert_8hh_1aa8944c5f0d4c2f0c3643c36ab4967a17" kindref="member">VALIDATE</ref>(this-&gt;<ref refid="classreactor_1_1ReactorElement_1a25bf298de879a82eefc1ba426be05812" kindref="member">container</ref>()-&gt;<ref refid="classreactor_1_1ReactorElement_1a25bf298de879a82eefc1ba426be05812" kindref="member">container</ref>()<sp/>==<sp/>port-&gt;<ref refid="classreactor_1_1ReactorElement_1a25bf298de879a82eefc1ba426be05812" kindref="member">container</ref>()-&gt;<ref refid="classreactor_1_1ReactorElement_1a25bf298de879a82eefc1ba426be05812" kindref="member">container</ref>(),</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;An<sp/>output<sp/>port<sp/>can<sp/>only<sp/>be<sp/>bound<sp/>to<sp/>an<sp/>input<sp/>port<sp/>if<sp/>both<sp/>ports<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;belong<sp/>to<sp/>reactors<sp/>in<sp/>the<sp/>same<sp/>hierarichal<sp/>level&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="assert_8hh_1aa8944c5f0d4c2f0c3643c36ab4967a17" kindref="member">VALIDATE</ref>(this-&gt;<ref refid="classreactor_1_1ReactorElement_1a25bf298de879a82eefc1ba426be05812" kindref="member">container</ref>()<sp/>!=<sp/>port-&gt;<ref refid="classreactor_1_1ReactorElement_1a25bf298de879a82eefc1ba426be05812" kindref="member">container</ref>(),</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;An<sp/>output<sp/>port<sp/>can<sp/>only<sp/>be<sp/>bound<sp/>to<sp/>an<sp/>input<sp/>port<sp/>if<sp/>both<sp/>ports<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;belong<sp/>to<sp/>different<sp/>reactors!&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(this-&gt;<ref refid="classreactor_1_1BasePort_1ad5ebded21426bfcf02359b1ab3fdf7d8" kindref="member">is_output</ref>()<sp/>&amp;&amp;<sp/>port-&gt;is_output())<sp/>{</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="assert_8hh_1aa8944c5f0d4c2f0c3643c36ab4967a17" kindref="member">VALIDATE</ref>(</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;<ref refid="classreactor_1_1ReactorElement_1a25bf298de879a82eefc1ba426be05812" kindref="member">container</ref>()-&gt;<ref refid="classreactor_1_1ReactorElement_1a25bf298de879a82eefc1ba426be05812" kindref="member">container</ref>()<sp/>==<sp/>port-&gt;<ref refid="classreactor_1_1ReactorElement_1a25bf298de879a82eefc1ba426be05812" kindref="member">container</ref>(),</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;An<sp/>output<sp/>port<sp/>A<sp/>may<sp/>only<sp/>be<sp/>bound<sp/>to<sp/>another<sp/>output<sp/>port<sp/>B<sp/>if<sp/>A<sp/>is<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;contained<sp/>by<sp/>a<sp/>reactor<sp/>that<sp/>in<sp/>turn<sp/>is<sp/>contained<sp/>by<sp/>the<sp/>reactor<sp/>of<sp/>B&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>std::runtime_error(</highlight><highlight class="stringliteral">&quot;unexpected<sp/>case&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/>port-&gt;_inward_binding<sp/>=<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>result<sp/>=<sp/>this-&gt;<ref refid="classreactor_1_1BasePort_1ada6d7c004f6529f49428030dfec9b52d" kindref="member">_outward_bindings</ref>.insert(port);</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><ref refid="assert_8hh_1aca68c0d4ac8df0838e209fb5300f7be3" kindref="member">ASSERT</ref>(result.second);</highlight></codeline>
<codeline lineno="52"><highlight class="normal">}</highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classreactor_1_1BasePort_1a781809b23cbb205087867bddbd077e17" kindref="member">BasePort::register_dependency</ref>(<ref refid="classreactor_1_1BasePort_1a5f86463029cca47f8aa15ff8cd5b9e51" kindref="member">Reaction</ref>*<sp/>reaction,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>is_trigger)<sp/>{</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><ref refid="assert_8hh_1aca68c0d4ac8df0838e209fb5300f7be3" kindref="member">ASSERT</ref>(reaction<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><ref refid="assert_8hh_1aca68c0d4ac8df0838e209fb5300f7be3" kindref="member">ASSERT</ref>(this-&gt;<ref refid="classreactor_1_1ReactorElement_1a895b09f977450723c59b67b41e643db8" kindref="member">environment</ref>()<sp/>==<sp/>reaction-&gt;environment());</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><ref refid="assert_8hh_1aa8944c5f0d4c2f0c3643c36ab4967a17" kindref="member">VALIDATE</ref>(!this-&gt;<ref refid="classreactor_1_1BasePort_1a397f8bbc24835a01bfad591abb85bcb4" kindref="member">has_outward_bindings</ref>(),</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Dependencies<sp/>may<sp/>no<sp/>be<sp/>declared<sp/>on<sp/>ports<sp/>with<sp/>an<sp/>outward<sp/>binding!&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><ref refid="assert_8hh_1aa8944c5f0d4c2f0c3643c36ab4967a17" kindref="member">VALIDATE</ref>(this-&gt;<ref refid="classreactor_1_1ReactorElement_1a895b09f977450723c59b67b41e643db8" kindref="member">environment</ref>()-&gt;phase()<sp/>==<sp/><ref refid="classreactor_1_1Environment_1a2f0bcf10490e174246fc14b456fb0755ad75c45e11c8aeb13494dba59a388a164" kindref="member">Environment::Phase::Assembly</ref>,</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Dependencies<sp/>can<sp/>only<sp/>be<sp/>registered<sp/>during<sp/>assembly<sp/>phase!&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(this-&gt;<ref refid="classreactor_1_1BasePort_1ad488760a5ed50b9bbf137d4e52c053f7" kindref="member">is_input</ref>())<sp/>{</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="assert_8hh_1aa8944c5f0d4c2f0c3643c36ab4967a17" kindref="member">VALIDATE</ref>(this-&gt;<ref refid="classreactor_1_1ReactorElement_1a25bf298de879a82eefc1ba426be05812" kindref="member">container</ref>()<sp/>==<sp/>reaction-&gt;<ref refid="classreactor_1_1ReactorElement_1a25bf298de879a82eefc1ba426be05812" kindref="member">container</ref>(),</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Dependent<sp/>input<sp/>ports<sp/>must<sp/>belong<sp/>to<sp/>the<sp/>same<sp/>reactor<sp/>as<sp/>the<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;reaction&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="assert_8hh_1aa8944c5f0d4c2f0c3643c36ab4967a17" kindref="member">VALIDATE</ref>(this-&gt;<ref refid="classreactor_1_1ReactorElement_1a25bf298de879a82eefc1ba426be05812" kindref="member">container</ref>()-&gt;<ref refid="classreactor_1_1ReactorElement_1a25bf298de879a82eefc1ba426be05812" kindref="member">container</ref>()<sp/>==<sp/>reaction-&gt;<ref refid="classreactor_1_1ReactorElement_1a25bf298de879a82eefc1ba426be05812" kindref="member">container</ref>(),</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Dependent<sp/>output<sp/>ports<sp/>must<sp/>belong<sp/>to<sp/>a<sp/>contained<sp/>reactor&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>r1<sp/>=<sp/><ref refid="classreactor_1_1BasePort_1ab6c05497d78f1462ea0969e3feb59137" kindref="member">_dependencies</ref>.insert(reaction);</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><ref refid="assert_8hh_1aca68c0d4ac8df0838e209fb5300f7be3" kindref="member">ASSERT</ref>(r1.second);</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(is_trigger)<sp/>{</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>r2<sp/>=<sp/><ref refid="classreactor_1_1BasePort_1a26cdf0eb1d25ebdcdbd576c78f56bf38" kindref="member">_triggers</ref>.insert(reaction);</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="assert_8hh_1aca68c0d4ac8df0838e209fb5300f7be3" kindref="member">ASSERT</ref>(r2.second);</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="77"><highlight class="normal">}</highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classreactor_1_1BasePort_1a1a9831f2c5dfb36c1c0987ab7dcdd608" kindref="member">BasePort::register_antidependency</ref>(<ref refid="classreactor_1_1BasePort_1a5f86463029cca47f8aa15ff8cd5b9e51" kindref="member">Reaction</ref>*<sp/>reaction)<sp/>{</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><ref refid="assert_8hh_1aca68c0d4ac8df0838e209fb5300f7be3" kindref="member">ASSERT</ref>(reaction<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><ref refid="assert_8hh_1aca68c0d4ac8df0838e209fb5300f7be3" kindref="member">ASSERT</ref>(this-&gt;<ref refid="classreactor_1_1ReactorElement_1a895b09f977450723c59b67b41e643db8" kindref="member">environment</ref>()<sp/>==<sp/>reaction-&gt;environment());</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><ref refid="assert_8hh_1aa8944c5f0d4c2f0c3643c36ab4967a17" kindref="member">VALIDATE</ref>(</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>!this-&gt;<ref refid="classreactor_1_1BasePort_1a8d8a93a2d15683d29ec7a4ec483db01a" kindref="member">has_inward_binding</ref>(),</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Antidependencies<sp/>may<sp/>no<sp/>be<sp/>declared<sp/>on<sp/>ports<sp/>with<sp/>an<sp/>inward<sp/>binding!&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><ref refid="assert_8hh_1aa8944c5f0d4c2f0c3643c36ab4967a17" kindref="member">VALIDATE</ref>(this-&gt;<ref refid="classreactor_1_1ReactorElement_1a895b09f977450723c59b67b41e643db8" kindref="member">environment</ref>()-&gt;phase()<sp/>==<sp/><ref refid="classreactor_1_1Environment_1a2f0bcf10490e174246fc14b456fb0755ad75c45e11c8aeb13494dba59a388a164" kindref="member">Environment::Phase::Assembly</ref>,</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Antidependencies<sp/>can<sp/>only<sp/>be<sp/>registered<sp/>during<sp/>assembly<sp/>phase!&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(this-&gt;<ref refid="classreactor_1_1BasePort_1ad5ebded21426bfcf02359b1ab3fdf7d8" kindref="member">is_output</ref>())<sp/>{</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="assert_8hh_1aa8944c5f0d4c2f0c3643c36ab4967a17" kindref="member">VALIDATE</ref>(this-&gt;<ref refid="classreactor_1_1ReactorElement_1a25bf298de879a82eefc1ba426be05812" kindref="member">container</ref>()<sp/>==<sp/>reaction-&gt;<ref refid="classreactor_1_1ReactorElement_1a25bf298de879a82eefc1ba426be05812" kindref="member">container</ref>(),</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Antidependent<sp/>output<sp/>ports<sp/>must<sp/>belong<sp/>to<sp/>the<sp/>same<sp/>reactor<sp/>as<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;the<sp/>reaction&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="assert_8hh_1aa8944c5f0d4c2f0c3643c36ab4967a17" kindref="member">VALIDATE</ref>(this-&gt;<ref refid="classreactor_1_1ReactorElement_1a25bf298de879a82eefc1ba426be05812" kindref="member">container</ref>()-&gt;<ref refid="classreactor_1_1ReactorElement_1a25bf298de879a82eefc1ba426be05812" kindref="member">container</ref>()<sp/>==<sp/>reaction-&gt;<ref refid="classreactor_1_1ReactorElement_1a25bf298de879a82eefc1ba426be05812" kindref="member">container</ref>(),</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Antidependent<sp/>input<sp/>ports<sp/>must<sp/>belong<sp/>to<sp/>a<sp/>contained<sp/>reactor&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="96"><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>r<sp/>=<sp/><ref refid="classreactor_1_1BasePort_1ae323964a96ecb4e0d952d7632736464b" kindref="member">_antidependencies</ref>.insert(reaction);</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><ref refid="assert_8hh_1aca68c0d4ac8df0838e209fb5300f7be3" kindref="member">ASSERT</ref>(r.second);</highlight></codeline>
<codeline lineno="99"><highlight class="normal">}</highlight></codeline>
<codeline lineno="100"><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::set&lt;Port&lt;void&gt;*&gt;&amp;<sp/><ref refid="classreactor_1_1Port_1a4d3f681f3f3e0ef75988c3790eb24a17" kindref="member">Port&lt;void&gt;::typed_outward_bindings</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">reinterpret_cast&lt;</highlight><highlight class="keyword">const<sp/></highlight><highlight class="normal">std::set&lt;Port&lt;void&gt;*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">&amp;&gt;(<ref refid="classreactor_1_1BasePort_1aaf404379c3908577b7fc7e394d5c972c" kindref="member">outward_bindings</ref>());</highlight></codeline>
<codeline lineno="103"><highlight class="normal">}</highlight></codeline>
<codeline lineno="104"><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal">Port&lt;void&gt;*<sp/><ref refid="classreactor_1_1Port_1a22d0ef9cd82989e03a669aeccf8e694a" kindref="member">Port&lt;void&gt;::typed_inward_binding</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="normal">Port&lt;void&gt;*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<ref refid="classreactor_1_1BasePort_1af4a42f14f878509c00bb16d0c5b2c201" kindref="member">inward_binding</ref>());</highlight></codeline>
<codeline lineno="107"><highlight class="normal">}</highlight></codeline>
<codeline lineno="108"><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classreactor_1_1Port_1ac3d03f90b425a8656911ed3acf462a4d" kindref="member">Port&lt;void&gt;::set</ref>()<sp/>{</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><ref refid="assert_8hh_1aa8944c5f0d4c2f0c3643c36ab4967a17" kindref="member">VALIDATE</ref>(!<ref refid="classreactor_1_1BasePort_1a8d8a93a2d15683d29ec7a4ec483db01a" kindref="member">has_inward_binding</ref>(),</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;set()<sp/>may<sp/>only<sp/>be<sp/>called<sp/>on<sp/>a<sp/>ports<sp/>that<sp/>do<sp/>not<sp/>have<sp/>an<sp/>inward<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;binding!&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>scheduler<sp/>=<sp/><ref refid="classreactor_1_1ReactorElement_1a895b09f977450723c59b67b41e643db8" kindref="member">environment</ref>()-&gt;<ref refid="classreactor_1_1Environment_1a2a4cf2150b314a18db041e8a06086904" kindref="member">scheduler</ref>();</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/>this-&gt;present<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/>scheduler-&gt;<ref refid="classreactor_1_1Scheduler_1a344df614ab8590273a2682eed1d7aa12" kindref="member">set_port</ref>(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="116"><highlight class="normal">}</highlight></codeline>
<codeline lineno="117"><highlight class="normal"></highlight></codeline>
<codeline lineno="118"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classreactor_1_1Port_1ab4ab58fa62258a9e79b061ecd3f55946" kindref="member">Port&lt;void&gt;::is_present</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classreactor_1_1BasePort_1a8d8a93a2d15683d29ec7a4ec483db01a" kindref="member">has_inward_binding</ref>())<sp/>{</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>typed_inward_binding()-&gt;is_present();</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>present;</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="124"><highlight class="normal">}</highlight></codeline>
<codeline lineno="125"><highlight class="normal"></highlight></codeline>
<codeline lineno="126"><highlight class="normal">}<sp/><sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>reactor</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="/home/runner/work/reactor-cpp/reactor-cpp/lib/port.cc"/>
  </compounddef>
</doxygen>
