<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="classreactor_1_1Port_3_01void_01_4" kind="class" language="C++" prot="public">
    <compoundname>reactor::Port&lt; void &gt;</compoundname>
    <basecompoundref refid="classreactor_1_1BasePort" prot="public" virt="non-virtual">reactor::BasePort</basecompoundref>
    <includes refid="port_8hh" local="no">port.hh</includes>
    <templateparamlist>
    </templateparamlist>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classreactor_1_1Port_3_01void_01_4_1aa9ab4e50d097ed98354eb6508f4e7085" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool reactor::Port&lt; void &gt;::present</definition>
        <argsstring></argsstring>
        <name>present</name>
        <initializer>{false}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/reactor-cpp/reactor-cpp/include/reactor-cpp/port.hh" line="93" column="1" bodyfile="/home/runner/work/reactor-cpp/reactor-cpp/include/reactor-cpp/port.hh" bodystart="93" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="classreactor_1_1Port_3_01void_01_4_1aedf8266554cde75e236451d8c512e4c8" prot="private" static="no" const="no" explicit="no" inline="yes" final="yes" virt="virtual">
        <type>void</type>
        <definition>void reactor::Port&lt; void &gt;::cleanup</definition>
        <argsstring>() override final</argsstring>
        <name>cleanup</name>
        <reimplements refid="classreactor_1_1BasePort_1afe81e6747077349da4c420a873783579">cleanup</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/reactor-cpp/reactor-cpp/include/reactor-cpp/port.hh" line="95" column="1" bodyfile="/home/runner/work/reactor-cpp/reactor-cpp/include/reactor-cpp/port.hh" bodystart="95" bodyend="95"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classreactor_1_1Port_3_01void_01_4_1a2114887bc779a8f035dcf0e21eabd5fd" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>reactor::Port&lt; void &gt;::Port</definition>
        <argsstring>(const std::string &amp;name, PortType type, Reactor *container)</argsstring>
        <name>Port</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>name</declname>
        </param>
        <param>
          <type><ref refid="namespacereactor_1a08c8e2d85e5bc706b1af8a87e40eec6d" kindref="member">PortType</ref></type>
          <declname>type</declname>
        </param>
        <param>
          <type><ref refid="classreactor_1_1Reactor" kindref="compound">Reactor</ref> *</type>
          <declname>container</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/reactor-cpp/reactor-cpp/include/reactor-cpp/port.hh" line="98" column="1" bodyfile="/home/runner/work/reactor-cpp/reactor-cpp/include/reactor-cpp/port.hh" bodystart="98" bodyend="99"/>
      </memberdef>
      <memberdef kind="function" id="classreactor_1_1Port_3_01void_01_4_1a86c25528d080fe3d1bba83878fd53860" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void reactor::Port&lt; void &gt;::bind_to</definition>
        <argsstring>(Port&lt; void &gt; *port)</argsstring>
        <name>bind_to</name>
        <param>
          <type><ref refid="classreactor_1_1Port" kindref="compound">Port</ref>&lt; void &gt; *</type>
          <declname>port</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/reactor-cpp/reactor-cpp/include/reactor-cpp/port.hh" line="101" column="1" bodyfile="/home/runner/work/reactor-cpp/reactor-cpp/include/reactor-cpp/port.hh" bodystart="101" bodyend="101"/>
      </memberdef>
      <memberdef kind="function" id="classreactor_1_1Port_3_01void_01_4_1aa50594b9d98fa93219adf8330ed76131" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classreactor_1_1Port" kindref="compound">Port</ref>&lt; void &gt; *</type>
        <definition>Port&lt; void &gt; * reactor::Port&lt; void &gt;::typed_inward_binding</definition>
        <argsstring>() const</argsstring>
        <name>typed_inward_binding</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/reactor-cpp/reactor-cpp/include/reactor-cpp/port.hh" line="102" column="1" bodyfile="/home/runner/work/reactor-cpp/reactor-cpp/lib/port.cc" bodystart="105" bodyend="107"/>
      </memberdef>
      <memberdef kind="function" id="classreactor_1_1Port_3_01void_01_4_1a8f9bdc0b6bace7d1a05615b28cf43717" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const std::set&lt; <ref refid="classreactor_1_1Port" kindref="compound">Port</ref>&lt; void &gt; * &gt; &amp;</type>
        <definition>const std::set&lt; Port&lt; void &gt; * &gt; &amp; reactor::Port&lt; void &gt;::typed_outward_bindings</definition>
        <argsstring>() const</argsstring>
        <name>typed_outward_bindings</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/reactor-cpp/reactor-cpp/include/reactor-cpp/port.hh" line="103" column="1" bodyfile="/home/runner/work/reactor-cpp/reactor-cpp/lib/port.cc" bodystart="101" bodyend="103"/>
      </memberdef>
      <memberdef kind="function" id="classreactor_1_1Port_3_01void_01_4_1afe579f1f5b555a15703c9a05d28bea03" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void reactor::Port&lt; void &gt;::set</definition>
        <argsstring>()</argsstring>
        <name>set</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/reactor-cpp/reactor-cpp/include/reactor-cpp/port.hh" line="105" column="1" bodyfile="/home/runner/work/reactor-cpp/reactor-cpp/lib/port.cc" bodystart="109" bodyend="116"/>
      </memberdef>
      <memberdef kind="function" id="classreactor_1_1Port_3_01void_01_4_1a9f7a92606f6f4600b85fd4680de7007d" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool reactor::Port&lt; void &gt;::is_present</definition>
        <argsstring>() const</argsstring>
        <name>is_present</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/reactor-cpp/reactor-cpp/include/reactor-cpp/port.hh" line="106" column="1" bodyfile="/home/runner/work/reactor-cpp/reactor-cpp/lib/port.cc" bodystart="118" bodyend="124"/>
      </memberdef>
      <memberdef kind="function" id="classreactor_1_1Port_3_01void_01_4_1a3a84b8d17b1a43197a753847b0df1777" prot="public" static="no" const="no" explicit="no" inline="yes" final="yes" virt="virtual">
        <type>void</type>
        <definition>void reactor::Port&lt; void &gt;::startup</definition>
        <argsstring>() override final</argsstring>
        <name>startup</name>
        <reimplements refid="classreactor_1_1ReactorElement_1a8cb574cb20ff963903ad905fb0a157e3">startup</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/reactor-cpp/reactor-cpp/include/reactor-cpp/port.hh" line="108" column="1" bodyfile="/home/runner/work/reactor-cpp/reactor-cpp/include/reactor-cpp/port.hh" bodystart="108" bodyend="108"/>
      </memberdef>
      <memberdef kind="function" id="classreactor_1_1Port_3_01void_01_4_1ad7d9028d091509215b3685e4af95cb03" prot="public" static="no" const="no" explicit="no" inline="yes" final="yes" virt="virtual">
        <type>void</type>
        <definition>void reactor::Port&lt; void &gt;::shutdown</definition>
        <argsstring>() override final</argsstring>
        <name>shutdown</name>
        <reimplements refid="classreactor_1_1ReactorElement_1a8fce084bef582156979ebba56737e907">shutdown</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/reactor-cpp/reactor-cpp/include/reactor-cpp/port.hh" line="109" column="1" bodyfile="/home/runner/work/reactor-cpp/reactor-cpp/include/reactor-cpp/port.hh" bodystart="109" bodyend="109"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="138">
        <label>reactor::BasePort</label>
        <link refid="classreactor_1_1BasePort"/>
        <childnode refid="139" relation="public-inheritance">
        </childnode>
      </node>
      <node id="137">
        <label>reactor::Port&lt; void &gt;</label>
        <link refid="classreactor_1_1Port_3_01void_01_4"/>
        <childnode refid="138" relation="public-inheritance">
        </childnode>
      </node>
      <node id="139">
        <label>reactor::ReactorElement</label>
        <link refid="classreactor_1_1ReactorElement"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="141">
        <label>reactor::BasePort</label>
        <link refid="classreactor_1_1BasePort"/>
        <childnode refid="142" relation="public-inheritance">
        </childnode>
        <childnode refid="141" relation="usage">
          <edgelabel>_inward_binding</edgelabel>
        </childnode>
      </node>
      <node id="140">
        <label>reactor::Port&lt; void &gt;</label>
        <link refid="classreactor_1_1Port_3_01void_01_4"/>
        <childnode refid="141" relation="public-inheritance">
        </childnode>
      </node>
      <node id="142">
        <label>reactor::ReactorElement</label>
        <link refid="classreactor_1_1ReactorElement"/>
        <childnode refid="143" relation="usage">
          <edgelabel>_container</edgelabel>
        </childnode>
        <childnode refid="144" relation="usage">
          <edgelabel>_environment</edgelabel>
        </childnode>
      </node>
      <node id="144">
        <label>reactor::Environment</label>
        <link refid="classreactor_1_1Environment"/>
        <childnode refid="145" relation="usage">
          <edgelabel>_scheduler</edgelabel>
        </childnode>
      </node>
      <node id="146">
        <label>reactor::LogicalTime</label>
        <link refid="classreactor_1_1LogicalTime"/>
      </node>
      <node id="143">
        <label>reactor::Reactor</label>
        <link refid="classreactor_1_1Reactor"/>
        <childnode refid="142" relation="public-inheritance">
        </childnode>
      </node>
      <node id="145">
        <label>reactor::Scheduler</label>
        <link refid="classreactor_1_1Scheduler"/>
        <childnode refid="146" relation="usage">
          <edgelabel>_logical_time</edgelabel>
        </childnode>
        <childnode refid="144" relation="usage">
          <edgelabel>_environment</edgelabel>
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/home/runner/work/reactor-cpp/reactor-cpp/include/reactor-cpp/port.hh" line="91" column="1" bodyfile="/home/runner/work/reactor-cpp/reactor-cpp/include/reactor-cpp/port.hh" bodystart="91" bodyend="110"/>
    <listofallmembers>
      <member refid="classreactor_1_1BasePort_1a9158ab37ab600ea2b8a39749ca9404c4" prot="public" virt="non-virtual"><scope>reactor::Port&lt; void &gt;</scope><name>antidependencies</name></member>
      <member refid="classreactor_1_1BasePort_1a58886ca9004547c85b06e7803d0530b1" prot="protected" virt="non-virtual"><scope>reactor::Port&lt; void &gt;</scope><name>base_bind_to</name></member>
      <member refid="classreactor_1_1BasePort_1abf23bbb8fdd982044fca7d253ca1d851" prot="protected" virt="non-virtual"><scope>reactor::Port&lt; void &gt;</scope><name>BasePort</name></member>
      <member refid="classreactor_1_1Port_3_01void_01_4_1a86c25528d080fe3d1bba83878fd53860" prot="public" virt="non-virtual"><scope>reactor::Port&lt; void &gt;</scope><name>bind_to</name></member>
      <member refid="classreactor_1_1Port_3_01void_01_4_1aedf8266554cde75e236451d8c512e4c8" prot="private" virt="virtual"><scope>reactor::Port&lt; void &gt;</scope><name>cleanup</name></member>
      <member refid="classreactor_1_1ReactorElement_1a25bf298de879a82eefc1ba426be05812" prot="public" virt="non-virtual"><scope>reactor::Port&lt; void &gt;</scope><name>container</name></member>
      <member refid="classreactor_1_1BasePort_1aab124dee21981b289b55c2e2c8e3922d" prot="public" virt="non-virtual"><scope>reactor::Port&lt; void &gt;</scope><name>dependencies</name></member>
      <member refid="classreactor_1_1ReactorElement_1a895b09f977450723c59b67b41e643db8" prot="public" virt="non-virtual"><scope>reactor::Port&lt; void &gt;</scope><name>environment</name></member>
      <member refid="classreactor_1_1ReactorElement_1af57b89113cd189208ea95668ad5bd141" prot="public" virt="non-virtual"><scope>reactor::Port&lt; void &gt;</scope><name>fqn</name></member>
      <member refid="classreactor_1_1BasePort_1a0c046ef79ccf68f8a68f788df774aed3" prot="public" virt="non-virtual"><scope>reactor::Port&lt; void &gt;</scope><name>has_antidependencies</name></member>
      <member refid="classreactor_1_1BasePort_1a687c0460c4823d90d150c6a363e256a9" prot="public" virt="non-virtual"><scope>reactor::Port&lt; void &gt;</scope><name>has_dependencies</name></member>
      <member refid="classreactor_1_1BasePort_1a8d8a93a2d15683d29ec7a4ec483db01a" prot="public" virt="non-virtual"><scope>reactor::Port&lt; void &gt;</scope><name>has_inward_binding</name></member>
      <member refid="classreactor_1_1BasePort_1a397f8bbc24835a01bfad591abb85bcb4" prot="public" virt="non-virtual"><scope>reactor::Port&lt; void &gt;</scope><name>has_outward_bindings</name></member>
      <member refid="classreactor_1_1BasePort_1af4a42f14f878509c00bb16d0c5b2c201" prot="public" virt="non-virtual"><scope>reactor::Port&lt; void &gt;</scope><name>inward_binding</name></member>
      <member refid="classreactor_1_1BasePort_1ad488760a5ed50b9bbf137d4e52c053f7" prot="public" virt="non-virtual"><scope>reactor::Port&lt; void &gt;</scope><name>is_input</name></member>
      <member refid="classreactor_1_1BasePort_1ad5ebded21426bfcf02359b1ab3fdf7d8" prot="public" virt="non-virtual"><scope>reactor::Port&lt; void &gt;</scope><name>is_output</name></member>
      <member refid="classreactor_1_1Port_3_01void_01_4_1a9f7a92606f6f4600b85fd4680de7007d" prot="public" virt="non-virtual"><scope>reactor::Port&lt; void &gt;</scope><name>is_present</name></member>
      <member refid="classreactor_1_1ReactorElement_1a29c516a59fd1ccc43fa0023c550b6964" prot="public" virt="non-virtual"><scope>reactor::Port&lt; void &gt;</scope><name>is_top_level</name></member>
      <member refid="classreactor_1_1ReactorElement_1a99579f61dbaf5d5d98aebfe26eb8bf77" prot="public" virt="non-virtual"><scope>reactor::Port&lt; void &gt;</scope><name>name</name></member>
      <member refid="classreactor_1_1BasePort_1aaf404379c3908577b7fc7e394d5c972c" prot="public" virt="non-virtual"><scope>reactor::Port&lt; void &gt;</scope><name>outward_bindings</name></member>
      <member refid="classreactor_1_1Port_3_01void_01_4_1a2114887bc779a8f035dcf0e21eabd5fd" prot="public" virt="non-virtual"><scope>reactor::Port&lt; void &gt;</scope><name>Port</name></member>
      <member refid="classreactor_1_1Port_3_01void_01_4_1aa9ab4e50d097ed98354eb6508f4e7085" prot="private" virt="non-virtual"><scope>reactor::Port&lt; void &gt;</scope><name>present</name></member>
      <member refid="classreactor_1_1ReactorElement_1aebc8c1cabcadca08400284fdb05ce746" prot="public" virt="non-virtual"><scope>reactor::Port&lt; void &gt;</scope><name>ReactorElement</name></member>
      <member refid="classreactor_1_1ReactorElement_1ac5f85a8322de3fad7191a8f749b507fd" prot="public" virt="non-virtual"><scope>reactor::Port&lt; void &gt;</scope><name>ReactorElement</name></member>
      <member refid="classreactor_1_1ReactorElement_1aa975574e21f5f7a4bb761f04ed57dfa4" prot="public" virt="non-virtual"><scope>reactor::Port&lt; void &gt;</scope><name>ReactorElement</name></member>
      <member refid="classreactor_1_1ReactorElement_1a2ba6e1e309233db7cfc124563f9f8f9f" prot="public" virt="non-virtual"><scope>reactor::Port&lt; void &gt;</scope><name>ReactorElement</name></member>
      <member refid="classreactor_1_1BasePort_1a1a9831f2c5dfb36c1c0987ab7dcdd608" prot="protected" virt="non-virtual"><scope>reactor::Port&lt; void &gt;</scope><name>register_antidependency</name></member>
      <member refid="classreactor_1_1BasePort_1a781809b23cbb205087867bddbd077e17" prot="protected" virt="non-virtual"><scope>reactor::Port&lt; void &gt;</scope><name>register_dependency</name></member>
      <member refid="classreactor_1_1Port_3_01void_01_4_1afe579f1f5b555a15703c9a05d28bea03" prot="public" virt="non-virtual"><scope>reactor::Port&lt; void &gt;</scope><name>set</name></member>
      <member refid="classreactor_1_1Port_3_01void_01_4_1ad7d9028d091509215b3685e4af95cb03" prot="public" virt="virtual"><scope>reactor::Port&lt; void &gt;</scope><name>shutdown</name></member>
      <member refid="classreactor_1_1Port_3_01void_01_4_1a3a84b8d17b1a43197a753847b0df1777" prot="public" virt="virtual"><scope>reactor::Port&lt; void &gt;</scope><name>startup</name></member>
      <member refid="classreactor_1_1BasePort_1a71208c7024e39242b1012091daf7b7ed" prot="public" virt="non-virtual"><scope>reactor::Port&lt; void &gt;</scope><name>triggers</name></member>
      <member refid="classreactor_1_1ReactorElement_1a9291659e2893372cfea42ffccfd487b2" prot="public" virt="non-virtual"><scope>reactor::Port&lt; void &gt;</scope><name>Type</name></member>
      <member refid="classreactor_1_1Port_3_01void_01_4_1aa50594b9d98fa93219adf8330ed76131" prot="public" virt="non-virtual"><scope>reactor::Port&lt; void &gt;</scope><name>typed_inward_binding</name></member>
      <member refid="classreactor_1_1Port_3_01void_01_4_1a8f9bdc0b6bace7d1a05615b28cf43717" prot="public" virt="non-virtual"><scope>reactor::Port&lt; void &gt;</scope><name>typed_outward_bindings</name></member>
      <member refid="classreactor_1_1ReactorElement_1ac9075040ad83b1945f75f3065c0405fa" prot="public" virt="virtual"><scope>reactor::Port&lt; void &gt;</scope><name>~ReactorElement</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
