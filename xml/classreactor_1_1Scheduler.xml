<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="classreactor_1_1Scheduler" kind="class" language="C++" prot="public">
    <compoundname>reactor::Scheduler</compoundname>
    <includes refid="scheduler_8hh" local="no">scheduler.hh</includes>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="classreactor_1_1Scheduler_1a5a4a25635fcb20f268876a0bf70eb68e" prot="public" static="no">
        <type>std::packaged_task&lt; void(void)&gt;</type>
        <definition>using reactor::Scheduler::WorkItem =  std::packaged_task&lt;void(void)&gt;</definition>
        <argsstring></argsstring>
        <name>WorkItem</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/reactor-cpp/reactor-cpp/include/reactor-cpp/scheduler.hh" line="27" column="1" bodyfile="/home/runner/work/reactor-cpp/reactor-cpp/include/reactor-cpp/scheduler.hh" bodystart="27" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classreactor_1_1Scheduler_1a4a4934dc58f294069b8c64435cdfe564" prot="public" static="no">
        <type>std::unique_ptr&lt; <ref refid="classreactor_1_1Scheduler_1a5a4a25635fcb20f268876a0bf70eb68e" kindref="member">WorkItem</ref> &gt;</type>
        <definition>using reactor::Scheduler::WorkPtr =  std::unique_ptr&lt;WorkItem&gt;</definition>
        <argsstring></argsstring>
        <name>WorkPtr</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/reactor-cpp/reactor-cpp/include/reactor-cpp/scheduler.hh" line="28" column="1" bodyfile="/home/runner/work/reactor-cpp/reactor-cpp/include/reactor-cpp/scheduler.hh" bodystart="28" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classreactor_1_1Scheduler_1aa32e06a71b7406a238616cc5d7b55610" prot="public" static="no">
        <type>std::map&lt; <ref refid="classreactor_1_1BaseAction" kindref="compound">BaseAction</ref> *, std::function&lt; void(void)&gt; &gt;</type>
        <definition>using reactor::Scheduler::EventMap =  std::map&lt;BaseAction*, std::function&lt;void(void)&gt; &gt;</definition>
        <argsstring></argsstring>
        <name>EventMap</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/reactor-cpp/reactor-cpp/include/reactor-cpp/scheduler.hh" line="29" column="1" bodyfile="/home/runner/work/reactor-cpp/reactor-cpp/include/reactor-cpp/scheduler.hh" bodystart="29" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classreactor_1_1Scheduler_1ac4b787be81d8b6d7a72ce987d24a2261" prot="private" static="no" mutable="no">
        <type>const bool</type>
        <definition>const bool reactor::Scheduler::using_workers</definition>
        <argsstring></argsstring>
        <name>using_workers</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/reactor-cpp/reactor-cpp/include/reactor-cpp/scheduler.hh" line="32" column="1" bodyfile="/home/runner/work/reactor-cpp/reactor-cpp/include/reactor-cpp/scheduler.hh" bodystart="32" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classreactor_1_1Scheduler_1a25e5b848efc680452eef58a0fc0b773c" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool reactor::Scheduler::terminate</definition>
        <argsstring></argsstring>
        <name>terminate</name>
        <initializer>{false}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/reactor-cpp/reactor-cpp/include/reactor-cpp/scheduler.hh" line="33" column="1" bodyfile="/home/runner/work/reactor-cpp/reactor-cpp/include/reactor-cpp/scheduler.hh" bodystart="33" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classreactor_1_1Scheduler_1a68b0b490d08d5db7890c337d4250ad1c" prot="private" static="no" mutable="no">
        <type><ref refid="classreactor_1_1LogicalTime" kindref="compound">LogicalTime</ref></type>
        <definition>LogicalTime reactor::Scheduler::_logical_time</definition>
        <argsstring></argsstring>
        <name>_logical_time</name>
        <initializer>{}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/reactor-cpp/reactor-cpp/include/reactor-cpp/scheduler.hh" line="34" column="1" bodyfile="/home/runner/work/reactor-cpp/reactor-cpp/include/reactor-cpp/scheduler.hh" bodystart="34" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classreactor_1_1Scheduler_1a7c9c2365d7b10cedb335c81d14610149" prot="private" static="no" mutable="no">
        <type><ref refid="classreactor_1_1Environment" kindref="compound">Environment</ref> *</type>
        <definition>Environment* reactor::Scheduler::_environment</definition>
        <argsstring></argsstring>
        <name>_environment</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/reactor-cpp/reactor-cpp/include/reactor-cpp/scheduler.hh" line="36" column="1" bodyfile="/home/runner/work/reactor-cpp/reactor-cpp/include/reactor-cpp/scheduler.hh" bodystart="36" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classreactor_1_1Scheduler_1aad3a17b14df9166b175a3d5baf5afd14" prot="private" static="no" mutable="no">
        <type>std::vector&lt; std::thread &gt;</type>
        <definition>std::vector&lt;std::thread&gt; reactor::Scheduler::worker_threads</definition>
        <argsstring></argsstring>
        <name>worker_threads</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/reactor-cpp/reactor-cpp/include/reactor-cpp/scheduler.hh" line="37" column="1" bodyfile="/home/runner/work/reactor-cpp/reactor-cpp/include/reactor-cpp/scheduler.hh" bodystart="37" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classreactor_1_1Scheduler_1adbf93f069a826ffe49c8d890c5af8ff3" prot="private" static="no" mutable="no">
        <type>std::mutex</type>
        <definition>std::mutex reactor::Scheduler::m_schedule</definition>
        <argsstring></argsstring>
        <name>m_schedule</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/reactor-cpp/reactor-cpp/include/reactor-cpp/scheduler.hh" line="39" column="1" bodyfile="/home/runner/work/reactor-cpp/reactor-cpp/include/reactor-cpp/scheduler.hh" bodystart="39" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classreactor_1_1Scheduler_1a338d396352878baec7c8ecd2e1e7b202" prot="private" static="no" mutable="no">
        <type>std::unique_lock&lt; std::mutex &gt;</type>
        <definition>std::unique_lock&lt;std::mutex&gt; reactor::Scheduler::schedule_lock</definition>
        <argsstring></argsstring>
        <name>schedule_lock</name>
        <initializer>{<ref refid="classreactor_1_1Scheduler_1adbf93f069a826ffe49c8d890c5af8ff3" kindref="member">m_schedule</ref>, std::defer_lock}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/reactor-cpp/reactor-cpp/include/reactor-cpp/scheduler.hh" line="40" column="1" bodyfile="/home/runner/work/reactor-cpp/reactor-cpp/include/reactor-cpp/scheduler.hh" bodystart="40" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classreactor_1_1Scheduler_1a75e7baf3e6f17cedca2f23690af7b61d" prot="private" static="no" mutable="no">
        <type>std::condition_variable</type>
        <definition>std::condition_variable reactor::Scheduler::cv_schedule</definition>
        <argsstring></argsstring>
        <name>cv_schedule</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/reactor-cpp/reactor-cpp/include/reactor-cpp/scheduler.hh" line="41" column="1" bodyfile="/home/runner/work/reactor-cpp/reactor-cpp/include/reactor-cpp/scheduler.hh" bodystart="41" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classreactor_1_1Scheduler_1a2ff891940d9bc4af41858e1c31ec2922" prot="private" static="no" mutable="no">
        <type>std::mutex</type>
        <definition>std::mutex reactor::Scheduler::m_event_queue</definition>
        <argsstring></argsstring>
        <name>m_event_queue</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/reactor-cpp/reactor-cpp/include/reactor-cpp/scheduler.hh" line="43" column="1" bodyfile="/home/runner/work/reactor-cpp/reactor-cpp/include/reactor-cpp/scheduler.hh" bodystart="43" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classreactor_1_1Scheduler_1aad84798ec7af707837594ed335532829" prot="private" static="no" mutable="no">
        <type>std::map&lt; <ref refid="classreactor_1_1Tag" kindref="compound">Tag</ref>, std::unique_ptr&lt; <ref refid="classreactor_1_1Scheduler_1aa32e06a71b7406a238616cc5d7b55610" kindref="member">EventMap</ref> &gt; &gt;</type>
        <definition>std::map&lt;Tag, std::unique_ptr&lt;EventMap&gt; &gt; reactor::Scheduler::event_queue</definition>
        <argsstring></argsstring>
        <name>event_queue</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/reactor-cpp/reactor-cpp/include/reactor-cpp/scheduler.hh" line="44" column="1" bodyfile="/home/runner/work/reactor-cpp/reactor-cpp/include/reactor-cpp/scheduler.hh" bodystart="44" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classreactor_1_1Scheduler_1a19bbe962eab2b7a6c4a25312e4479739" prot="private" static="no" mutable="no">
        <type>std::vector&lt; <ref refid="classreactor_1_1BasePort" kindref="compound">BasePort</ref> * &gt;</type>
        <definition>std::vector&lt;BasePort*&gt; reactor::Scheduler::set_ports</definition>
        <argsstring></argsstring>
        <name>set_ports</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/reactor-cpp/reactor-cpp/include/reactor-cpp/scheduler.hh" line="46" column="1" bodyfile="/home/runner/work/reactor-cpp/reactor-cpp/include/reactor-cpp/scheduler.hh" bodystart="46" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classreactor_1_1Scheduler_1a3f06ec50b64251aeca469a137b3fdf9b" prot="private" static="no" mutable="no">
        <type>std::mutex</type>
        <definition>std::mutex reactor::Scheduler::m_reaction_queue</definition>
        <argsstring></argsstring>
        <name>m_reaction_queue</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/reactor-cpp/reactor-cpp/include/reactor-cpp/scheduler.hh" line="48" column="1" bodyfile="/home/runner/work/reactor-cpp/reactor-cpp/include/reactor-cpp/scheduler.hh" bodystart="48" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classreactor_1_1Scheduler_1a65b74e5e2d64189fe30010140a2f8dad" prot="private" static="no" mutable="no">
        <type>std::vector&lt; std::vector&lt; <ref refid="classreactor_1_1Reaction" kindref="compound">Reaction</ref> * &gt; &gt;</type>
        <definition>std::vector&lt;std::vector&lt;Reaction*&gt; &gt; reactor::Scheduler::reaction_queue</definition>
        <argsstring></argsstring>
        <name>reaction_queue</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/reactor-cpp/reactor-cpp/include/reactor-cpp/scheduler.hh" line="49" column="1" bodyfile="/home/runner/work/reactor-cpp/reactor-cpp/include/reactor-cpp/scheduler.hh" bodystart="49" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classreactor_1_1Scheduler_1a03e5a171cbb041f02fd10fedf7f2f7de" prot="private" static="no" mutable="no">
        <type>std::vector&lt; <ref refid="classreactor_1_1Reaction" kindref="compound">Reaction</ref> * &gt;</type>
        <definition>std::vector&lt;Reaction*&gt; reactor::Scheduler::ready_reactions</definition>
        <argsstring></argsstring>
        <name>ready_reactions</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/reactor-cpp/reactor-cpp/include/reactor-cpp/scheduler.hh" line="50" column="1" bodyfile="/home/runner/work/reactor-cpp/reactor-cpp/include/reactor-cpp/scheduler.hh" bodystart="50" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classreactor_1_1Scheduler_1a606c5c5af3e45a75b7304fdfd0283e14" prot="private" static="no" mutable="no">
        <type>std::set&lt; <ref refid="classreactor_1_1Reaction" kindref="compound">Reaction</ref> * &gt;</type>
        <definition>std::set&lt;Reaction*&gt; reactor::Scheduler::executing_reactions</definition>
        <argsstring></argsstring>
        <name>executing_reactions</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/reactor-cpp/reactor-cpp/include/reactor-cpp/scheduler.hh" line="51" column="1" bodyfile="/home/runner/work/reactor-cpp/reactor-cpp/include/reactor-cpp/scheduler.hh" bodystart="51" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classreactor_1_1Scheduler_1ae0b036e6af4ebf47f619bf6ac4b7120d" prot="private" static="no" mutable="no">
        <type>std::condition_variable</type>
        <definition>std::condition_variable reactor::Scheduler::cv_ready_reactions</definition>
        <argsstring></argsstring>
        <name>cv_ready_reactions</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/reactor-cpp/reactor-cpp/include/reactor-cpp/scheduler.hh" line="52" column="1" bodyfile="/home/runner/work/reactor-cpp/reactor-cpp/include/reactor-cpp/scheduler.hh" bodystart="52" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classreactor_1_1Scheduler_1a5ce0b7fa5a71eaf46b1d423c1ff90557" prot="private" static="no" mutable="no">
        <type>std::condition_variable</type>
        <definition>std::condition_variable reactor::Scheduler::cv_done_reactions</definition>
        <argsstring></argsstring>
        <name>cv_done_reactions</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/reactor-cpp/reactor-cpp/include/reactor-cpp/scheduler.hh" line="53" column="1" bodyfile="/home/runner/work/reactor-cpp/reactor-cpp/include/reactor-cpp/scheduler.hh" bodystart="53" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classreactor_1_1Scheduler_1a77d3790a2a37875efc1980ba55824561" prot="private" static="no" mutable="no">
        <type>std::atomic&lt; bool &gt;</type>
        <definition>std::atomic&lt;bool&gt; reactor::Scheduler::_stop</definition>
        <argsstring></argsstring>
        <name>_stop</name>
        <initializer>{false}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/reactor-cpp/reactor-cpp/include/reactor-cpp/scheduler.hh" line="61" column="1" bodyfile="/home/runner/work/reactor-cpp/reactor-cpp/include/reactor-cpp/scheduler.hh" bodystart="61" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="classreactor_1_1Scheduler_1a0ba1d794dc627f7927e5c0457f612960" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void reactor::Scheduler::work</definition>
        <argsstring>(unsigned id)</argsstring>
        <name>work</name>
        <param>
          <type>unsigned</type>
          <declname>id</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/reactor-cpp/reactor-cpp/include/reactor-cpp/scheduler.hh" line="55" column="1" bodyfile="/home/runner/work/reactor-cpp/reactor-cpp/lib/scheduler.cc" bodystart="21" bodyend="52"/>
      </memberdef>
      <memberdef kind="function" id="classreactor_1_1Scheduler_1ad1c1bbd55c9933b9e5886d378419185c" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool reactor::Scheduler::next</definition>
        <argsstring>()</argsstring>
        <name>next</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/reactor-cpp/reactor-cpp/include/reactor-cpp/scheduler.hh" line="57" column="1" bodyfile="/home/runner/work/reactor-cpp/reactor-cpp/lib/scheduler.cc" bodystart="82" bodyend="202"/>
      </memberdef>
      <memberdef kind="function" id="classreactor_1_1Scheduler_1a09d04a0906b272908481b48ef12fc3f3" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void reactor::Scheduler::set_port_helper</definition>
        <argsstring>(BasePort *p)</argsstring>
        <name>set_port_helper</name>
        <param>
          <type><ref refid="classreactor_1_1BasePort" kindref="compound">BasePort</ref> *</type>
          <declname>p</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/reactor-cpp/reactor-cpp/include/reactor-cpp/scheduler.hh" line="59" column="1" bodyfile="/home/runner/work/reactor-cpp/reactor-cpp/lib/scheduler.cc" bodystart="291" bodyend="302"/>
      </memberdef>
      <memberdef kind="function" id="classreactor_1_1Scheduler_1a726e2f27cb5fc21f9b276a20e7f47192" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void reactor::Scheduler::dispatch_reactions_to_workers</definition>
        <argsstring>(const std::vector&lt; Reaction *&gt; &amp;reactions)</argsstring>
        <name>dispatch_reactions_to_workers</name>
        <param>
          <type>const std::vector&lt; <ref refid="classreactor_1_1Reaction" kindref="compound">Reaction</ref> *&gt; &amp;</type>
          <declname>reactions</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/reactor-cpp/reactor-cpp/include/reactor-cpp/scheduler.hh" line="63" column="1" bodyfile="/home/runner/work/reactor-cpp/reactor-cpp/lib/scheduler.cc" bodystart="204" bodyend="226"/>
      </memberdef>
      <memberdef kind="function" id="classreactor_1_1Scheduler_1a776074d94dcd54cc093c295b3359d5eb" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void reactor::Scheduler::execute_reactions_inline</definition>
        <argsstring>(const std::vector&lt; Reaction *&gt; &amp;reactions)</argsstring>
        <name>execute_reactions_inline</name>
        <param>
          <type>const std::vector&lt; <ref refid="classreactor_1_1Reaction" kindref="compound">Reaction</ref> *&gt; &amp;</type>
          <declname>reactions</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/reactor-cpp/reactor-cpp/include/reactor-cpp/scheduler.hh" line="64" column="1" bodyfile="/home/runner/work/reactor-cpp/reactor-cpp/lib/scheduler.cc" bodystart="228" bodyend="238"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classreactor_1_1Scheduler_1a58fbbd0e02d4fc8ef0bcf9330d010c2e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>reactor::Scheduler::Scheduler</definition>
        <argsstring>(Environment *env)</argsstring>
        <name>Scheduler</name>
        <param>
          <type><ref refid="classreactor_1_1Environment" kindref="compound">Environment</ref> *</type>
          <declname>env</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/reactor-cpp/reactor-cpp/include/reactor-cpp/scheduler.hh" line="67" column="1" bodyfile="/home/runner/work/reactor-cpp/reactor-cpp/lib/scheduler.cc" bodystart="240" bodyend="241"/>
      </memberdef>
      <memberdef kind="function" id="classreactor_1_1Scheduler_1ad6f0cfcd7f07fa81392ab62f172fbd68" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>reactor::Scheduler::~Scheduler</definition>
        <argsstring>()</argsstring>
        <name>~Scheduler</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/reactor-cpp/reactor-cpp/include/reactor-cpp/scheduler.hh" line="68" column="1" bodyfile="/home/runner/work/reactor-cpp/reactor-cpp/lib/scheduler.cc" bodystart="243" bodyend="243"/>
      </memberdef>
      <memberdef kind="function" id="classreactor_1_1Scheduler_1ab77f16103f0eb0631886805bc94f231c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void reactor::Scheduler::schedule_sync</definition>
        <argsstring>(const Tag &amp;tag, BaseAction *action, std::function&lt; void(void)&gt; pre_handler)</argsstring>
        <name>schedule_sync</name>
        <param>
          <type>const <ref refid="classreactor_1_1Tag" kindref="compound">Tag</ref> &amp;</type>
          <declname>tag</declname>
        </param>
        <param>
          <type><ref refid="classreactor_1_1BaseAction" kindref="compound">BaseAction</ref> *</type>
          <declname>action</declname>
        </param>
        <param>
          <type>std::function&lt; void(void)&gt;</type>
          <declname>pre_handler</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/reactor-cpp/reactor-cpp/include/reactor-cpp/scheduler.hh" line="70" column="1" bodyfile="/home/runner/work/reactor-cpp/reactor-cpp/lib/scheduler.cc" bodystart="245" bodyend="268"/>
      </memberdef>
      <memberdef kind="function" id="classreactor_1_1Scheduler_1a1ca117318ce71ab3c63b7b8160d413af" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void reactor::Scheduler::schedule_async</definition>
        <argsstring>(const Tag &amp;tag, BaseAction *action, std::function&lt; void(void)&gt; pre_handler)</argsstring>
        <name>schedule_async</name>
        <param>
          <type>const <ref refid="classreactor_1_1Tag" kindref="compound">Tag</ref> &amp;</type>
          <declname>tag</declname>
        </param>
        <param>
          <type><ref refid="classreactor_1_1BaseAction" kindref="compound">BaseAction</ref> *</type>
          <declname>action</declname>
        </param>
        <param>
          <type>std::function&lt; void(void)&gt;</type>
          <declname>pre_handler</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/reactor-cpp/reactor-cpp/include/reactor-cpp/scheduler.hh" line="73" column="1" bodyfile="/home/runner/work/reactor-cpp/reactor-cpp/lib/scheduler.cc" bodystart="270" bodyend="276"/>
      </memberdef>
      <memberdef kind="function" id="classreactor_1_1Scheduler_1a970ac74510f7cce25fd7e9994b11dad6" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void reactor::Scheduler::lock</definition>
        <argsstring>()</argsstring>
        <name>lock</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/reactor-cpp/reactor-cpp/include/reactor-cpp/scheduler.hh" line="77" column="1" bodyfile="/home/runner/work/reactor-cpp/reactor-cpp/include/reactor-cpp/scheduler.hh" bodystart="77" bodyend="77"/>
      </memberdef>
      <memberdef kind="function" id="classreactor_1_1Scheduler_1a8787186c85529782cf95fd58050f3af2" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void reactor::Scheduler::unlock</definition>
        <argsstring>()</argsstring>
        <name>unlock</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/reactor-cpp/reactor-cpp/include/reactor-cpp/scheduler.hh" line="78" column="1" bodyfile="/home/runner/work/reactor-cpp/reactor-cpp/include/reactor-cpp/scheduler.hh" bodystart="78" bodyend="78"/>
      </memberdef>
      <memberdef kind="function" id="classreactor_1_1Scheduler_1a344df614ab8590273a2682eed1d7aa12" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void reactor::Scheduler::set_port</definition>
        <argsstring>(BasePort *)</argsstring>
        <name>set_port</name>
        <param>
          <type><ref refid="classreactor_1_1BasePort" kindref="compound">BasePort</ref> *</type>
          <defname>p</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/reactor-cpp/reactor-cpp/include/reactor-cpp/scheduler.hh" line="80" column="1" bodyfile="/home/runner/work/reactor-cpp/reactor-cpp/lib/scheduler.cc" bodystart="278" bodyend="289"/>
      </memberdef>
      <memberdef kind="function" id="classreactor_1_1Scheduler_1a347fccd0368f7d36b8b9a13fec647f03" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const <ref refid="classreactor_1_1LogicalTime" kindref="compound">LogicalTime</ref> &amp;</type>
        <definition>const LogicalTime&amp; reactor::Scheduler::logical_time</definition>
        <argsstring>() const</argsstring>
        <name>logical_time</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/reactor-cpp/reactor-cpp/include/reactor-cpp/scheduler.hh" line="82" column="1" bodyfile="/home/runner/work/reactor-cpp/reactor-cpp/include/reactor-cpp/scheduler.hh" bodystart="82" bodyend="82"/>
      </memberdef>
      <memberdef kind="function" id="classreactor_1_1Scheduler_1a2366bac3be216dbba49e110a69250ece" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void reactor::Scheduler::start</definition>
        <argsstring>()</argsstring>
        <name>start</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/reactor-cpp/reactor-cpp/include/reactor-cpp/scheduler.hh" line="84" column="1" bodyfile="/home/runner/work/reactor-cpp/reactor-cpp/lib/scheduler.cc" bodystart="54" bodyend="80"/>
      </memberdef>
      <memberdef kind="function" id="classreactor_1_1Scheduler_1a0ef1f93067b868fcf0c26031b7567054" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void reactor::Scheduler::stop</definition>
        <argsstring>()</argsstring>
        <name>stop</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/reactor-cpp/reactor-cpp/include/reactor-cpp/scheduler.hh" line="86" column="1" bodyfile="/home/runner/work/reactor-cpp/reactor-cpp/lib/scheduler.cc" bodystart="304" bodyend="307"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <collaborationgraph>
      <node id="186">
        <label>reactor::Environment</label>
        <link refid="classreactor_1_1Environment"/>
        <childnode refid="184" relation="usage">
          <edgelabel>_scheduler</edgelabel>
        </childnode>
      </node>
      <node id="185">
        <label>reactor::LogicalTime</label>
        <link refid="classreactor_1_1LogicalTime"/>
      </node>
      <node id="184">
        <label>reactor::Scheduler</label>
        <link refid="classreactor_1_1Scheduler"/>
        <childnode refid="185" relation="usage">
          <edgelabel>_logical_time</edgelabel>
        </childnode>
        <childnode refid="186" relation="usage">
          <edgelabel>_environment</edgelabel>
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/home/runner/work/reactor-cpp/reactor-cpp/include/reactor-cpp/scheduler.hh" line="25" column="1" bodyfile="/home/runner/work/reactor-cpp/reactor-cpp/include/reactor-cpp/scheduler.hh" bodystart="25" bodyend="87"/>
    <listofallmembers>
      <member refid="classreactor_1_1Scheduler_1a7c9c2365d7b10cedb335c81d14610149" prot="private" virt="non-virtual"><scope>reactor::Scheduler</scope><name>_environment</name></member>
      <member refid="classreactor_1_1Scheduler_1a68b0b490d08d5db7890c337d4250ad1c" prot="private" virt="non-virtual"><scope>reactor::Scheduler</scope><name>_logical_time</name></member>
      <member refid="classreactor_1_1Scheduler_1a77d3790a2a37875efc1980ba55824561" prot="private" virt="non-virtual"><scope>reactor::Scheduler</scope><name>_stop</name></member>
      <member refid="classreactor_1_1Scheduler_1a5ce0b7fa5a71eaf46b1d423c1ff90557" prot="private" virt="non-virtual"><scope>reactor::Scheduler</scope><name>cv_done_reactions</name></member>
      <member refid="classreactor_1_1Scheduler_1ae0b036e6af4ebf47f619bf6ac4b7120d" prot="private" virt="non-virtual"><scope>reactor::Scheduler</scope><name>cv_ready_reactions</name></member>
      <member refid="classreactor_1_1Scheduler_1a75e7baf3e6f17cedca2f23690af7b61d" prot="private" virt="non-virtual"><scope>reactor::Scheduler</scope><name>cv_schedule</name></member>
      <member refid="classreactor_1_1Scheduler_1a726e2f27cb5fc21f9b276a20e7f47192" prot="private" virt="non-virtual"><scope>reactor::Scheduler</scope><name>dispatch_reactions_to_workers</name></member>
      <member refid="classreactor_1_1Scheduler_1aad84798ec7af707837594ed335532829" prot="private" virt="non-virtual"><scope>reactor::Scheduler</scope><name>event_queue</name></member>
      <member refid="classreactor_1_1Scheduler_1aa32e06a71b7406a238616cc5d7b55610" prot="public" virt="non-virtual"><scope>reactor::Scheduler</scope><name>EventMap</name></member>
      <member refid="classreactor_1_1Scheduler_1a776074d94dcd54cc093c295b3359d5eb" prot="private" virt="non-virtual"><scope>reactor::Scheduler</scope><name>execute_reactions_inline</name></member>
      <member refid="classreactor_1_1Scheduler_1a606c5c5af3e45a75b7304fdfd0283e14" prot="private" virt="non-virtual"><scope>reactor::Scheduler</scope><name>executing_reactions</name></member>
      <member refid="classreactor_1_1Scheduler_1a970ac74510f7cce25fd7e9994b11dad6" prot="public" virt="non-virtual"><scope>reactor::Scheduler</scope><name>lock</name></member>
      <member refid="classreactor_1_1Scheduler_1a347fccd0368f7d36b8b9a13fec647f03" prot="public" virt="non-virtual"><scope>reactor::Scheduler</scope><name>logical_time</name></member>
      <member refid="classreactor_1_1Scheduler_1a2ff891940d9bc4af41858e1c31ec2922" prot="private" virt="non-virtual"><scope>reactor::Scheduler</scope><name>m_event_queue</name></member>
      <member refid="classreactor_1_1Scheduler_1a3f06ec50b64251aeca469a137b3fdf9b" prot="private" virt="non-virtual"><scope>reactor::Scheduler</scope><name>m_reaction_queue</name></member>
      <member refid="classreactor_1_1Scheduler_1adbf93f069a826ffe49c8d890c5af8ff3" prot="private" virt="non-virtual"><scope>reactor::Scheduler</scope><name>m_schedule</name></member>
      <member refid="classreactor_1_1Scheduler_1ad1c1bbd55c9933b9e5886d378419185c" prot="private" virt="non-virtual"><scope>reactor::Scheduler</scope><name>next</name></member>
      <member refid="classreactor_1_1Scheduler_1a65b74e5e2d64189fe30010140a2f8dad" prot="private" virt="non-virtual"><scope>reactor::Scheduler</scope><name>reaction_queue</name></member>
      <member refid="classreactor_1_1Scheduler_1a03e5a171cbb041f02fd10fedf7f2f7de" prot="private" virt="non-virtual"><scope>reactor::Scheduler</scope><name>ready_reactions</name></member>
      <member refid="classreactor_1_1Scheduler_1a1ca117318ce71ab3c63b7b8160d413af" prot="public" virt="non-virtual"><scope>reactor::Scheduler</scope><name>schedule_async</name></member>
      <member refid="classreactor_1_1Scheduler_1a338d396352878baec7c8ecd2e1e7b202" prot="private" virt="non-virtual"><scope>reactor::Scheduler</scope><name>schedule_lock</name></member>
      <member refid="classreactor_1_1Scheduler_1ab77f16103f0eb0631886805bc94f231c" prot="public" virt="non-virtual"><scope>reactor::Scheduler</scope><name>schedule_sync</name></member>
      <member refid="classreactor_1_1Scheduler_1a58fbbd0e02d4fc8ef0bcf9330d010c2e" prot="public" virt="non-virtual"><scope>reactor::Scheduler</scope><name>Scheduler</name></member>
      <member refid="classreactor_1_1Scheduler_1a344df614ab8590273a2682eed1d7aa12" prot="public" virt="non-virtual"><scope>reactor::Scheduler</scope><name>set_port</name></member>
      <member refid="classreactor_1_1Scheduler_1a09d04a0906b272908481b48ef12fc3f3" prot="private" virt="non-virtual"><scope>reactor::Scheduler</scope><name>set_port_helper</name></member>
      <member refid="classreactor_1_1Scheduler_1a19bbe962eab2b7a6c4a25312e4479739" prot="private" virt="non-virtual"><scope>reactor::Scheduler</scope><name>set_ports</name></member>
      <member refid="classreactor_1_1Scheduler_1a2366bac3be216dbba49e110a69250ece" prot="public" virt="non-virtual"><scope>reactor::Scheduler</scope><name>start</name></member>
      <member refid="classreactor_1_1Scheduler_1a0ef1f93067b868fcf0c26031b7567054" prot="public" virt="non-virtual"><scope>reactor::Scheduler</scope><name>stop</name></member>
      <member refid="classreactor_1_1Scheduler_1a25e5b848efc680452eef58a0fc0b773c" prot="private" virt="non-virtual"><scope>reactor::Scheduler</scope><name>terminate</name></member>
      <member refid="classreactor_1_1Scheduler_1a8787186c85529782cf95fd58050f3af2" prot="public" virt="non-virtual"><scope>reactor::Scheduler</scope><name>unlock</name></member>
      <member refid="classreactor_1_1Scheduler_1ac4b787be81d8b6d7a72ce987d24a2261" prot="private" virt="non-virtual"><scope>reactor::Scheduler</scope><name>using_workers</name></member>
      <member refid="classreactor_1_1Scheduler_1a0ba1d794dc627f7927e5c0457f612960" prot="private" virt="non-virtual"><scope>reactor::Scheduler</scope><name>work</name></member>
      <member refid="classreactor_1_1Scheduler_1aad3a17b14df9166b175a3d5baf5afd14" prot="private" virt="non-virtual"><scope>reactor::Scheduler</scope><name>worker_threads</name></member>
      <member refid="classreactor_1_1Scheduler_1a5a4a25635fcb20f268876a0bf70eb68e" prot="public" virt="non-virtual"><scope>reactor::Scheduler</scope><name>WorkItem</name></member>
      <member refid="classreactor_1_1Scheduler_1a4a4934dc58f294069b8c64435cdfe564" prot="public" virt="non-virtual"><scope>reactor::Scheduler</scope><name>WorkPtr</name></member>
      <member refid="classreactor_1_1Scheduler_1ad6f0cfcd7f07fa81392ab62f172fbd68" prot="public" virt="non-virtual"><scope>reactor::Scheduler</scope><name>~Scheduler</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
