<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="classreactor_1_1Action_3_01void_01_4" kind="class" language="C++" prot="public">
    <compoundname>reactor::Action&lt; void &gt;</compoundname>
    <basecompoundref refid="classreactor_1_1BaseAction" prot="public" virt="non-virtual">reactor::BaseAction</basecompoundref>
    <includes refid="action_8hh" local="no">action.hh</includes>
    <templateparamlist>
    </templateparamlist>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classreactor_1_1Action_3_01void_01_4_1ad491b67ebfa70d65f04e6a0403a3cc51" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool reactor::Action&lt; void &gt;::present</definition>
        <argsstring></argsstring>
        <name>present</name>
        <initializer>{false}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/reactor-cpp/reactor-cpp/include/reactor-cpp/action.hh" line="93" column="1" bodyfile="/home/runner/work/reactor-cpp/reactor-cpp/include/reactor-cpp/action.hh" bodystart="93" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="classreactor_1_1Action_3_01void_01_4_1aa0306b1c370b15a324bac607e5f82f20" prot="private" static="no" const="no" explicit="no" inline="yes" final="yes" virt="virtual">
        <type>void</type>
        <definition>void reactor::Action&lt; void &gt;::cleanup</definition>
        <argsstring>() override final</argsstring>
        <name>cleanup</name>
        <reimplements refid="classreactor_1_1BaseAction_1a7e4ad7157e653054c7afa22b78e46923">cleanup</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/reactor-cpp/reactor-cpp/include/reactor-cpp/action.hh" line="95" column="1" bodyfile="/home/runner/work/reactor-cpp/reactor-cpp/include/reactor-cpp/action.hh" bodystart="95" bodyend="95"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-func">
      <memberdef kind="function" id="classreactor_1_1Action_3_01void_01_4_1a74b23c4d882b046dc8e9aaad11e10eab" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>reactor::Action&lt; void &gt;::Action</definition>
        <argsstring>(const std::string &amp;name, Reactor *container, bool logical, Duration min_delay)</argsstring>
        <name>Action</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>name</declname>
        </param>
        <param>
          <type><ref refid="classreactor_1_1Reactor" kindref="compound">Reactor</ref> *</type>
          <declname>container</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>logical</declname>
        </param>
        <param>
          <type><ref refid="namespacereactor_1aa8375b807a80703545664096c5b5b779" kindref="member">Duration</ref></type>
          <declname>min_delay</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/reactor-cpp/reactor-cpp/include/reactor-cpp/action.hh" line="98" column="1" bodyfile="/home/runner/work/reactor-cpp/reactor-cpp/include/reactor-cpp/action.hh" bodystart="98" bodyend="102"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classreactor_1_1Action_3_01void_01_4_1a6ba1aa14251401ebb7a4b13624d5ce92" prot="public" static="no" const="no" explicit="no" inline="yes" final="yes" virt="virtual">
        <type>void</type>
        <definition>void reactor::Action&lt; void &gt;::startup</definition>
        <argsstring>() override final</argsstring>
        <name>startup</name>
        <reimplements refid="classreactor_1_1ReactorElement_1a8cb574cb20ff963903ad905fb0a157e3">startup</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/reactor-cpp/reactor-cpp/include/reactor-cpp/action.hh" line="105" column="1" bodyfile="/home/runner/work/reactor-cpp/reactor-cpp/include/reactor-cpp/action.hh" bodystart="105" bodyend="105"/>
      </memberdef>
      <memberdef kind="function" id="classreactor_1_1Action_3_01void_01_4_1a871645e568af7688eeacefbb65be4489" prot="public" static="no" const="no" explicit="no" inline="yes" final="yes" virt="virtual">
        <type>void</type>
        <definition>void reactor::Action&lt; void &gt;::shutdown</definition>
        <argsstring>() override final</argsstring>
        <name>shutdown</name>
        <reimplements refid="classreactor_1_1ReactorElement_1a8fce084bef582156979ebba56737e907">shutdown</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/reactor-cpp/reactor-cpp/include/reactor-cpp/action.hh" line="106" column="1" bodyfile="/home/runner/work/reactor-cpp/reactor-cpp/include/reactor-cpp/action.hh" bodystart="106" bodyend="106"/>
      </memberdef>
      <memberdef kind="function" id="classreactor_1_1Action_3_01void_01_4_1aefb6d085020d1a60edbda6dce5dc033c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class Dur</type>
            <defval><ref refid="namespacereactor_1aa8375b807a80703545664096c5b5b779" kindref="member">Duration</ref></defval>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void reactor::Action&lt; void &gt;::schedule</definition>
        <argsstring>(Dur delay=Dur::zero())</argsstring>
        <name>schedule</name>
        <param>
          <type>Dur</type>
          <declname>delay</declname>
          <defval>Dur::zero()</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/reactor-cpp/reactor-cpp/include/reactor-cpp/action.hh" line="109" column="1" bodyfile="/home/runner/work/reactor-cpp/reactor-cpp/include/reactor-cpp/impl/action_impl.hh" bodystart="34" bodyend="49"/>
      </memberdef>
      <memberdef kind="function" id="classreactor_1_1Action_3_01void_01_4_1a073662b60fddaebe09bba20082738120" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool reactor::Action&lt; void &gt;::is_present</definition>
        <argsstring>() const</argsstring>
        <name>is_present</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/reactor-cpp/reactor-cpp/include/reactor-cpp/action.hh" line="110" column="1" bodyfile="/home/runner/work/reactor-cpp/reactor-cpp/include/reactor-cpp/action.hh" bodystart="110" bodyend="110"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="12">
        <label>reactor::Action&lt; void &gt;</label>
        <link refid="classreactor_1_1Action_3_01void_01_4"/>
        <childnode refid="13" relation="public-inheritance">
        </childnode>
      </node>
      <node id="13">
        <label>reactor::BaseAction</label>
        <link refid="classreactor_1_1BaseAction"/>
        <childnode refid="14" relation="public-inheritance">
        </childnode>
      </node>
      <node id="14">
        <label>reactor::ReactorElement</label>
        <link refid="classreactor_1_1ReactorElement"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="15">
        <label>reactor::Action&lt; void &gt;</label>
        <link refid="classreactor_1_1Action_3_01void_01_4"/>
        <childnode refid="16" relation="public-inheritance">
        </childnode>
      </node>
      <node id="16">
        <label>reactor::BaseAction</label>
        <link refid="classreactor_1_1BaseAction"/>
        <childnode refid="17" relation="public-inheritance">
        </childnode>
      </node>
      <node id="17">
        <label>reactor::ReactorElement</label>
        <link refid="classreactor_1_1ReactorElement"/>
        <childnode refid="18" relation="usage">
          <edgelabel>_container</edgelabel>
        </childnode>
        <childnode refid="19" relation="usage">
          <edgelabel>_environment</edgelabel>
        </childnode>
      </node>
      <node id="19">
        <label>reactor::Environment</label>
        <link refid="classreactor_1_1Environment"/>
        <childnode refid="20" relation="usage">
          <edgelabel>_scheduler</edgelabel>
        </childnode>
      </node>
      <node id="21">
        <label>reactor::LogicalTime</label>
        <link refid="classreactor_1_1LogicalTime"/>
      </node>
      <node id="18">
        <label>reactor::Reactor</label>
        <link refid="classreactor_1_1Reactor"/>
        <childnode refid="17" relation="public-inheritance">
        </childnode>
      </node>
      <node id="20">
        <label>reactor::Scheduler</label>
        <link refid="classreactor_1_1Scheduler"/>
        <childnode refid="21" relation="usage">
          <edgelabel>_logical_time</edgelabel>
        </childnode>
        <childnode refid="19" relation="usage">
          <edgelabel>_environment</edgelabel>
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/home/runner/work/reactor-cpp/reactor-cpp/include/reactor-cpp/action.hh" line="91" column="1" bodyfile="/home/runner/work/reactor-cpp/reactor-cpp/include/reactor-cpp/action.hh" bodystart="91" bodyend="111"/>
    <listofallmembers>
      <member refid="classreactor_1_1Action_3_01void_01_4_1a74b23c4d882b046dc8e9aaad11e10eab" prot="protected" virt="non-virtual"><scope>reactor::Action&lt; void &gt;</scope><name>Action</name></member>
      <member refid="classreactor_1_1BaseAction_1a94dadf5eacb10e4e1d7bc99e53ac8599" prot="protected" virt="non-virtual"><scope>reactor::Action&lt; void &gt;</scope><name>BaseAction</name></member>
      <member refid="classreactor_1_1Action_3_01void_01_4_1aa0306b1c370b15a324bac607e5f82f20" prot="private" virt="virtual"><scope>reactor::Action&lt; void &gt;</scope><name>cleanup</name></member>
      <member refid="classreactor_1_1ReactorElement_1a25bf298de879a82eefc1ba426be05812" prot="public" virt="non-virtual"><scope>reactor::Action&lt; void &gt;</scope><name>container</name></member>
      <member refid="classreactor_1_1ReactorElement_1a895b09f977450723c59b67b41e643db8" prot="public" virt="non-virtual"><scope>reactor::Action&lt; void &gt;</scope><name>environment</name></member>
      <member refid="classreactor_1_1ReactorElement_1af57b89113cd189208ea95668ad5bd141" prot="public" virt="non-virtual"><scope>reactor::Action&lt; void &gt;</scope><name>fqn</name></member>
      <member refid="classreactor_1_1BaseAction_1abff8e7a40679e9f0d6d31eb795530279" prot="public" virt="non-virtual"><scope>reactor::Action&lt; void &gt;</scope><name>is_logical</name></member>
      <member refid="classreactor_1_1BaseAction_1ae088220a837f00686793dd0a50629dc0" prot="public" virt="non-virtual"><scope>reactor::Action&lt; void &gt;</scope><name>is_physical</name></member>
      <member refid="classreactor_1_1Action_3_01void_01_4_1a073662b60fddaebe09bba20082738120" prot="public" virt="non-virtual"><scope>reactor::Action&lt; void &gt;</scope><name>is_present</name></member>
      <member refid="classreactor_1_1ReactorElement_1a29c516a59fd1ccc43fa0023c550b6964" prot="public" virt="non-virtual"><scope>reactor::Action&lt; void &gt;</scope><name>is_top_level</name></member>
      <member refid="classreactor_1_1BaseAction_1a98201db474f34cb9e38151a6960128f0" prot="protected" virt="non-virtual"><scope>reactor::Action&lt; void &gt;</scope><name>min_delay</name></member>
      <member refid="classreactor_1_1ReactorElement_1a99579f61dbaf5d5d98aebfe26eb8bf77" prot="public" virt="non-virtual"><scope>reactor::Action&lt; void &gt;</scope><name>name</name></member>
      <member refid="classreactor_1_1Action_3_01void_01_4_1ad491b67ebfa70d65f04e6a0403a3cc51" prot="private" virt="non-virtual"><scope>reactor::Action&lt; void &gt;</scope><name>present</name></member>
      <member refid="classreactor_1_1ReactorElement_1aebc8c1cabcadca08400284fdb05ce746" prot="public" virt="non-virtual"><scope>reactor::Action&lt; void &gt;</scope><name>ReactorElement</name></member>
      <member refid="classreactor_1_1ReactorElement_1ac5f85a8322de3fad7191a8f749b507fd" prot="public" virt="non-virtual"><scope>reactor::Action&lt; void &gt;</scope><name>ReactorElement</name></member>
      <member refid="classreactor_1_1ReactorElement_1aa975574e21f5f7a4bb761f04ed57dfa4" prot="public" virt="non-virtual"><scope>reactor::Action&lt; void &gt;</scope><name>ReactorElement</name></member>
      <member refid="classreactor_1_1ReactorElement_1a2ba6e1e309233db7cfc124563f9f8f9f" prot="public" virt="non-virtual"><scope>reactor::Action&lt; void &gt;</scope><name>ReactorElement</name></member>
      <member refid="classreactor_1_1BaseAction_1a5cde20240a08d79c6c826d97f9a7f916" prot="protected" virt="non-virtual"><scope>reactor::Action&lt; void &gt;</scope><name>register_scheduler</name></member>
      <member refid="classreactor_1_1BaseAction_1a8ee41c1fd582f54518b6ca06b95a54ad" prot="protected" virt="non-virtual"><scope>reactor::Action&lt; void &gt;</scope><name>register_trigger</name></member>
      <member refid="classreactor_1_1Action_3_01void_01_4_1aefb6d085020d1a60edbda6dce5dc033c" prot="public" virt="non-virtual"><scope>reactor::Action&lt; void &gt;</scope><name>schedule</name></member>
      <member refid="classreactor_1_1BaseAction_1ac480015d4e2e2309fa7f9b2e2a7a59ab" prot="public" virt="non-virtual"><scope>reactor::Action&lt; void &gt;</scope><name>schedulers</name></member>
      <member refid="classreactor_1_1Action_3_01void_01_4_1a871645e568af7688eeacefbb65be4489" prot="public" virt="virtual"><scope>reactor::Action&lt; void &gt;</scope><name>shutdown</name></member>
      <member refid="classreactor_1_1Action_3_01void_01_4_1a6ba1aa14251401ebb7a4b13624d5ce92" prot="public" virt="virtual"><scope>reactor::Action&lt; void &gt;</scope><name>startup</name></member>
      <member refid="classreactor_1_1BaseAction_1a330820b1a4bbe1b18d5b30773a690818" prot="public" virt="non-virtual"><scope>reactor::Action&lt; void &gt;</scope><name>triggers</name></member>
      <member refid="classreactor_1_1ReactorElement_1a9291659e2893372cfea42ffccfd487b2" prot="public" virt="non-virtual"><scope>reactor::Action&lt; void &gt;</scope><name>Type</name></member>
      <member refid="classreactor_1_1ReactorElement_1ac9075040ad83b1945f75f3065c0405fa" prot="public" virt="virtual"><scope>reactor::Action&lt; void &gt;</scope><name>~ReactorElement</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
