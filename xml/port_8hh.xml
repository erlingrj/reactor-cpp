<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="port_8hh" kind="file" language="C++">
    <compoundname>port.hh</compoundname>
    <includes local="no">set</includes>
    <includes refid="reactor_8hh" local="yes">reactor.hh</includes>
    <includes refid="value__ptr_8hh" local="yes">value_ptr.hh</includes>
    <includes refid="port__impl_8hh" local="yes">impl/port_impl.hh</includes>
    <includedby refid="environment_8cc" local="yes">/home/runner/work/reactor-cpp/reactor-cpp/lib/environment.cc</includedby>
    <includedby refid="port_8cc" local="yes">/home/runner/work/reactor-cpp/reactor-cpp/lib/port.cc</includedby>
    <includedby refid="reaction_8cc" local="yes">/home/runner/work/reactor-cpp/reactor-cpp/lib/reaction.cc</includedby>
    <includedby refid="reactor_8cc" local="yes">/home/runner/work/reactor-cpp/reactor-cpp/lib/reactor.cc</includedby>
    <includedby refid="scheduler_8cc" local="yes">/home/runner/work/reactor-cpp/reactor-cpp/lib/scheduler.cc</includedby>
    <includedby refid="reactor-cpp_8hh" local="yes">/home/runner/work/reactor-cpp/reactor-cpp/include/reactor-cpp/reactor-cpp.hh</includedby>
    <incdepgraph>
      <node id="208">
        <label>functional</label>
      </node>
      <node id="202">
        <label>cassert</label>
      </node>
      <node id="203">
        <label>stdexcept</label>
      </node>
      <node id="192">
        <label>string</label>
      </node>
      <node id="188">
        <label>/home/runner/work/reactor-cpp/reactor-cpp/include/reactor-cpp/port.hh</label>
        <link refid="port_8hh"/>
        <childnode refid="189" relation="include">
        </childnode>
        <childnode refid="190" relation="include">
        </childnode>
        <childnode refid="197" relation="include">
        </childnode>
        <childnode refid="200" relation="include">
        </childnode>
      </node>
      <node id="210">
        <label>map</label>
      </node>
      <node id="201">
        <label>../assert.hh</label>
        <link refid="assert_8hh"/>
        <childnode refid="202" relation="include">
        </childnode>
        <childnode refid="191" relation="include">
        </childnode>
        <childnode refid="203" relation="include">
        </childnode>
        <childnode refid="192" relation="include">
        </childnode>
      </node>
      <node id="193">
        <label>fwd.hh</label>
        <link refid="fwd_8hh"/>
      </node>
      <node id="207">
        <label>condition_variable</label>
      </node>
      <node id="213">
        <label>logical_time.hh</label>
        <link refid="logical__time_8hh"/>
        <childnode refid="194" relation="include">
        </childnode>
      </node>
      <node id="209">
        <label>future</label>
      </node>
      <node id="205">
        <label>vector</label>
      </node>
      <node id="197">
        <label>value_ptr.hh</label>
        <link refid="value__ptr_8hh"/>
        <childnode refid="198" relation="include">
        </childnode>
        <childnode refid="199" relation="include">
        </childnode>
      </node>
      <node id="191">
        <label>sstream</label>
      </node>
      <node id="206">
        <label>scheduler.hh</label>
        <link refid="scheduler_8hh"/>
        <childnode refid="207" relation="include">
        </childnode>
        <childnode refid="208" relation="include">
        </childnode>
        <childnode refid="209" relation="include">
        </childnode>
        <childnode refid="210" relation="include">
        </childnode>
        <childnode refid="211" relation="include">
        </childnode>
        <childnode refid="189" relation="include">
        </childnode>
        <childnode refid="212" relation="include">
        </childnode>
        <childnode refid="205" relation="include">
        </childnode>
        <childnode refid="193" relation="include">
        </childnode>
        <childnode refid="213" relation="include">
        </childnode>
      </node>
      <node id="196">
        <label>iostream</label>
      </node>
      <node id="194">
        <label>time.hh</label>
        <link refid="time_8hh"/>
        <childnode refid="195" relation="include">
        </childnode>
        <childnode refid="196" relation="include">
        </childnode>
      </node>
      <node id="211">
        <label>mutex</label>
      </node>
      <node id="195">
        <label>chrono</label>
      </node>
      <node id="212">
        <label>thread</label>
      </node>
      <node id="190">
        <label>reactor.hh</label>
        <link refid="reactor_8hh"/>
        <childnode refid="189" relation="include">
        </childnode>
        <childnode refid="191" relation="include">
        </childnode>
        <childnode refid="192" relation="include">
        </childnode>
        <childnode refid="193" relation="include">
        </childnode>
        <childnode refid="194" relation="include">
        </childnode>
      </node>
      <node id="199">
        <label>type_traits</label>
      </node>
      <node id="189">
        <label>set</label>
      </node>
      <node id="200">
        <label>impl/port_impl.hh</label>
        <link refid="port__impl_8hh"/>
        <childnode refid="201" relation="include">
        </childnode>
        <childnode refid="204" relation="include">
        </childnode>
      </node>
      <node id="204">
        <label>../environment.hh</label>
        <link refid="environment_8hh"/>
        <childnode refid="189" relation="include">
        </childnode>
        <childnode refid="192" relation="include">
        </childnode>
        <childnode refid="205" relation="include">
        </childnode>
        <childnode refid="190" relation="include">
        </childnode>
        <childnode refid="206" relation="include">
        </childnode>
      </node>
      <node id="198">
        <label>memory</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="218">
        <label>/home/runner/work/reactor-cpp/reactor-cpp/lib/reactor.cc</label>
        <link refid="reactor_8cc"/>
      </node>
      <node id="220">
        <label>/home/runner/work/reactor-cpp/reactor-cpp/include/reactor-cpp/reactor-cpp.hh</label>
        <link refid="reactor-cpp_8hh"/>
      </node>
      <node id="214">
        <label>/home/runner/work/reactor-cpp/reactor-cpp/include/reactor-cpp/port.hh</label>
        <link refid="port_8hh"/>
        <childnode refid="215" relation="include">
        </childnode>
        <childnode refid="216" relation="include">
        </childnode>
        <childnode refid="217" relation="include">
        </childnode>
        <childnode refid="218" relation="include">
        </childnode>
        <childnode refid="219" relation="include">
        </childnode>
        <childnode refid="220" relation="include">
        </childnode>
      </node>
      <node id="216">
        <label>/home/runner/work/reactor-cpp/reactor-cpp/lib/port.cc</label>
        <link refid="port_8cc"/>
      </node>
      <node id="217">
        <label>/home/runner/work/reactor-cpp/reactor-cpp/lib/reaction.cc</label>
        <link refid="reaction_8cc"/>
      </node>
      <node id="215">
        <label>/home/runner/work/reactor-cpp/reactor-cpp/lib/environment.cc</label>
        <link refid="environment_8cc"/>
      </node>
      <node id="219">
        <label>/home/runner/work/reactor-cpp/reactor-cpp/lib/scheduler.cc</label>
        <link refid="scheduler_8cc"/>
      </node>
    </invincdepgraph>
    <innerclass refid="classreactor_1_1BasePort" prot="public">reactor::BasePort</innerclass>
    <innerclass refid="classreactor_1_1Port" prot="public">reactor::Port</innerclass>
    <innerclass refid="classreactor_1_1Port_3_01void_01_4" prot="public">reactor::Port&lt; void &gt;</innerclass>
    <innerclass refid="classreactor_1_1Input" prot="public">reactor::Input</innerclass>
    <innerclass refid="classreactor_1_1Output" prot="public">reactor::Output</innerclass>
    <innernamespace refid="namespacereactor">reactor</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>(C)<sp/>2019<sp/>TU<sp/>Dresden</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*<sp/>All<sp/>rights<sp/>reserved.</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*<sp/>Authors:</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*<sp/><sp/><sp/>Christian<sp/>Menard</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>once</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;set&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="reactor_8hh" kindref="compound">reactor.hh</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="value__ptr_8hh" kindref="compound">value_ptr.hh</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespacereactor" kindref="compound">reactor</ref><sp/>{</highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="18" refid="namespacereactor_1a08c8e2d85e5bc706b1af8a87e40eec6d" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">enum<sp/>class</highlight><highlight class="normal"><sp/><ref refid="namespacereactor_1a08c8e2d85e5bc706b1af8a87e40eec6d" kindref="member">PortType</ref><sp/>{<sp/><ref refid="namespacereactor_1a08c8e2d85e5bc706b1af8a87e40eec6da324118a6721dd6b8a9b9f4e327df2bf5" kindref="member">Input</ref>,<sp/><ref refid="classreactor_1_1Output" kindref="compound">Output</ref><sp/>};</highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="20" refid="classreactor_1_1BasePort" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classreactor_1_1BasePort" kindref="compound">BasePort</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classreactor_1_1ReactorElement" kindref="compound">ReactorElement</ref><sp/>{</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="22" refid="classreactor_1_1BasePort_1a2a457c372d11a3d959a91f27139a4938" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classreactor_1_1BasePort" kindref="compound">BasePort</ref>*<sp/>_inward_binding<sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="23" refid="classreactor_1_1BasePort_1ada6d7c004f6529f49428030dfec9b52d" refkind="member"><highlight class="normal"><sp/><sp/>std::set&lt;BasePort*&gt;<sp/><ref refid="classreactor_1_1BasePort_1ada6d7c004f6529f49428030dfec9b52d" kindref="member">_outward_bindings</ref>;</highlight></codeline>
<codeline lineno="24" refid="classreactor_1_1BasePort_1a9af5e0d55ee1a425b2c5975ab1ca871e" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="namespacereactor_1a08c8e2d85e5bc706b1af8a87e40eec6d" kindref="member">PortType</ref><sp/><ref refid="classreactor_1_1BasePort_1a9af5e0d55ee1a425b2c5975ab1ca871e" kindref="member">type</ref>;</highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight></codeline>
<codeline lineno="26" refid="classreactor_1_1BasePort_1ab6c05497d78f1462ea0969e3feb59137" refkind="member"><highlight class="normal"><sp/><sp/>std::set&lt;Reaction*&gt;<sp/><ref refid="classreactor_1_1BasePort_1ab6c05497d78f1462ea0969e3feb59137" kindref="member">_dependencies</ref>;</highlight></codeline>
<codeline lineno="27" refid="classreactor_1_1BasePort_1a26cdf0eb1d25ebdcdbd576c78f56bf38" refkind="member"><highlight class="normal"><sp/><sp/>std::set&lt;Reaction*&gt;<sp/><ref refid="classreactor_1_1BasePort_1a26cdf0eb1d25ebdcdbd576c78f56bf38" kindref="member">_triggers</ref>;</highlight></codeline>
<codeline lineno="28" refid="classreactor_1_1BasePort_1ae323964a96ecb4e0d952d7632736464b" refkind="member"><highlight class="normal"><sp/><sp/>std::set&lt;Reaction*&gt;<sp/><ref refid="classreactor_1_1BasePort_1ae323964a96ecb4e0d952d7632736464b" kindref="member">_antidependencies</ref>;</highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/></highlight><highlight class="keyword">protected</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="31" refid="classreactor_1_1BasePort_1abf23bbb8fdd982044fca7d253ca1d851" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classreactor_1_1BasePort_1abf23bbb8fdd982044fca7d253ca1d851" kindref="member">BasePort</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>name,<sp/><ref refid="namespacereactor_1a08c8e2d85e5bc706b1af8a87e40eec6d" kindref="member">PortType</ref><sp/>type,<sp/><ref refid="classreactor_1_1Reactor" kindref="compound">Reactor</ref>*<sp/>container)</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/><ref refid="classreactor_1_1ReactorElement" kindref="compound">ReactorElement</ref>(name,<sp/><ref refid="classreactor_1_1ReactorElement" kindref="compound">ReactorElement</ref>::<ref refid="classreactor_1_1ReactorElement_1a9291659e2893372cfea42ffccfd487b2" kindref="member">Type</ref>::<ref refid="classreactor_1_1Port" kindref="compound">Port</ref>,<sp/>container)</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>,<sp/>type(type)<sp/>{}</highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>base_bind_to(<ref refid="classreactor_1_1BasePort" kindref="compound">BasePort</ref>*<sp/>port);</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>register_dependency(<ref refid="classreactor_1_1Reaction" kindref="compound">Reaction</ref>*<sp/>reaction,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>is_trigger);</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>register_antidependency(<ref refid="classreactor_1_1Reaction" kindref="compound">Reaction</ref>*<sp/>reaction);</highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>cleanup()<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="42" refid="classreactor_1_1BasePort_1ad488760a5ed50b9bbf137d4e52c053f7" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classreactor_1_1BasePort_1ad488760a5ed50b9bbf137d4e52c053f7" kindref="member">is_input</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>type<sp/>==<sp/><ref refid="namespacereactor_1a08c8e2d85e5bc706b1af8a87e40eec6da324118a6721dd6b8a9b9f4e327df2bf5" kindref="member">PortType::Input</ref>;<sp/>}</highlight></codeline>
<codeline lineno="43" refid="classreactor_1_1BasePort_1ad5ebded21426bfcf02359b1ab3fdf7d8" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classreactor_1_1BasePort_1ad5ebded21426bfcf02359b1ab3fdf7d8" kindref="member">is_output</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>type<sp/>==<sp/><ref refid="namespacereactor_1a08c8e2d85e5bc706b1af8a87e40eec6da29c2c02a361c9d7028472e5d92cd4a54" kindref="member">PortType::Output</ref>;<sp/>}</highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight></codeline>
<codeline lineno="45" refid="classreactor_1_1BasePort_1a8d8a93a2d15683d29ec7a4ec483db01a" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classreactor_1_1BasePort_1a8d8a93a2d15683d29ec7a4ec483db01a" kindref="member">has_inward_binding</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_inward_binding<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="46" refid="classreactor_1_1BasePort_1a397f8bbc24835a01bfad591abb85bcb4" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classreactor_1_1BasePort_1a397f8bbc24835a01bfad591abb85bcb4" kindref="member">has_outward_bindings</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_outward_bindings.size()<sp/>&gt;<sp/>0;<sp/>}</highlight></codeline>
<codeline lineno="47" refid="classreactor_1_1BasePort_1a687c0460c4823d90d150c6a363e256a9" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classreactor_1_1BasePort_1a687c0460c4823d90d150c6a363e256a9" kindref="member">has_dependencies</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_dependencies.size()<sp/>&gt;<sp/>0;<sp/>}</highlight></codeline>
<codeline lineno="48" refid="classreactor_1_1BasePort_1a0c046ef79ccf68f8a68f788df774aed3" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classreactor_1_1BasePort_1a0c046ef79ccf68f8a68f788df774aed3" kindref="member">has_antidependencies</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_antidependencies.size()<sp/>&gt;<sp/>0;<sp/>}</highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight></codeline>
<codeline lineno="50" refid="classreactor_1_1BasePort_1af4a42f14f878509c00bb16d0c5b2c201" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classreactor_1_1BasePort" kindref="compound">BasePort</ref>*<sp/><ref refid="classreactor_1_1BasePort_1af4a42f14f878509c00bb16d0c5b2c201" kindref="member">inward_binding</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_inward_binding;<sp/>}</highlight></codeline>
<codeline lineno="51" refid="classreactor_1_1BasePort_1aaf404379c3908577b7fc7e394d5c972c" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/><ref refid="classreactor_1_1BasePort_1aaf404379c3908577b7fc7e394d5c972c" kindref="member">outward_bindings</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_outward_bindings;<sp/>}</highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight></codeline>
<codeline lineno="53" refid="classreactor_1_1BasePort_1a71208c7024e39242b1012091daf7b7ed" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/><ref refid="classreactor_1_1BasePort_1a71208c7024e39242b1012091daf7b7ed" kindref="member">triggers</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_triggers;<sp/>}</highlight></codeline>
<codeline lineno="54" refid="classreactor_1_1BasePort_1aab124dee21981b289b55c2e2c8e3922d" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/><ref refid="classreactor_1_1BasePort_1aab124dee21981b289b55c2e2c8e3922d" kindref="member">dependencies</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_dependencies;<sp/>}</highlight></codeline>
<codeline lineno="55" refid="classreactor_1_1BasePort_1a9158ab37ab600ea2b8a39749ca9404c4" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/><ref refid="classreactor_1_1BasePort_1a9158ab37ab600ea2b8a39749ca9404c4" kindref="member">antidependencies</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_antidependencies;<sp/>}</highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight></codeline>
<codeline lineno="57" refid="classreactor_1_1BasePort_1a5f86463029cca47f8aa15ff8cd5b9e51" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">friend</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classreactor_1_1Reaction" kindref="compound">Reaction</ref>;</highlight></codeline>
<codeline lineno="58" refid="classreactor_1_1BasePort_1afb88c77ea5daaefa6c8fa6bc5b9aa5c1" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">friend</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classreactor_1_1Scheduler" kindref="compound">Scheduler</ref>;</highlight></codeline>
<codeline lineno="59"><highlight class="normal">};</highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classreactor_1_1Port" kindref="compound">Port</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classreactor_1_1BasePort" kindref="compound">BasePort</ref><sp/>{</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="64" refid="classreactor_1_1Port_1adb40730eea54b529168a70cf8ed933c7" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classreactor_1_1ImmutableValuePtr" kindref="compound">ImmutableValuePtr&lt;T&gt;</ref><sp/>value_ptr{</highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">};</highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight></codeline>
<codeline lineno="66" refid="classreactor_1_1Port_1a05fdfca6fac003412700103e04ee66fd" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classreactor_1_1Port_1a05fdfca6fac003412700103e04ee66fd" kindref="member">cleanup</ref>()<sp/>override<sp/>final<sp/>{<sp/>value_ptr<sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="69" refid="classreactor_1_1Port_1a5cd32eff95f2606d94adc482bf6944af" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classreactor_1_1Port_1a5cd32eff95f2606d94adc482bf6944af" kindref="member">Port</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>name,<sp/><ref refid="namespacereactor_1a08c8e2d85e5bc706b1af8a87e40eec6d" kindref="member">PortType</ref><sp/>type,<sp/><ref refid="classreactor_1_1Reactor" kindref="compound">Reactor</ref>*<sp/>container)</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/><ref refid="classreactor_1_1BasePort" kindref="compound">BasePort</ref>(name,<sp/>type,<sp/>container)<sp/>{}</highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight></codeline>
<codeline lineno="72" refid="classreactor_1_1Port_1a71e1c6fe14a7a6566bc5d5342fa9d16d" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classreactor_1_1Port_1a71e1c6fe14a7a6566bc5d5342fa9d16d" kindref="member">bind_to</ref>(<ref refid="classreactor_1_1Port" kindref="compound">Port&lt;T&gt;</ref>*<sp/>port)<sp/>{<sp/>base_bind_to(port);<sp/>}</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><ref refid="classreactor_1_1Port" kindref="compound">Port&lt;T&gt;</ref>*<sp/>typed_inward_binding()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::set&lt;Port&lt;T&gt;*&gt;&amp;<sp/>typed_outward_bindings()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">set</highlight><highlight class="normal">(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classreactor_1_1ImmutableValuePtr" kindref="compound">ImmutableValuePtr&lt;T&gt;</ref>&amp;<sp/>value_ptr);</highlight></codeline>
<codeline lineno="77" refid="classreactor_1_1Port_1a041b16e47f5b67305ec215513ea92b23" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">set</highlight><highlight class="normal">(<ref refid="classreactor_1_1MutableValuePtr" kindref="compound">MutableValuePtr&lt;T&gt;</ref>&amp;&amp;<sp/>value_ptr)<sp/>{</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">set</highlight><highlight class="normal">(<ref refid="classreactor_1_1ImmutableValuePtr" kindref="compound">ImmutableValuePtr&lt;T&gt;</ref>(std::forward&lt;MutableValuePtr&lt;T&gt;&gt;(value_ptr)));</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="80" refid="classreactor_1_1Port_1ac75bc82e495f182037d5f7273fc75491" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">set</highlight><highlight class="normal">(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T&amp;<sp/>value)<sp/>{<sp/></highlight><highlight class="keyword">set</highlight><highlight class="normal">(make_immutable_value&lt;T&gt;(value));<sp/>}</highlight></codeline>
<codeline lineno="81" refid="classreactor_1_1Port_1a9f742e8839c5061c21f890c1ca5fca6b" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">set</highlight><highlight class="normal">(T&amp;&amp;<sp/>value)<sp/>{<sp/></highlight><highlight class="keyword">set</highlight><highlight class="normal">(make_immutable_value&lt;T&gt;(std::forward&lt;T&gt;(value)));<sp/>}</highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight></codeline>
<codeline lineno="83" refid="classreactor_1_1Port_1ae182b2b10c53f2a21c424437dfc2b40e" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classreactor_1_1Port_1ae182b2b10c53f2a21c424437dfc2b40e" kindref="member">startup</ref>()<sp/>override<sp/>final<sp/>{}</highlight></codeline>
<codeline lineno="84" refid="classreactor_1_1Port_1a3d440102c643fd98d17b4cf8714c910d" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classreactor_1_1Port_1a3d440102c643fd98d17b4cf8714c910d" kindref="member">shutdown</ref>()<sp/>override<sp/>final<sp/>{}</highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classreactor_1_1ImmutableValuePtr" kindref="compound">ImmutableValuePtr&lt;T&gt;</ref>&amp;<sp/></highlight><highlight class="keyword">get</highlight><highlight class="normal">()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>is_present()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="88"><highlight class="normal">};</highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;&gt;</highlight></codeline>
<codeline lineno="91" refid="classreactor_1_1Port_3_01void_01_4" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classreactor_1_1Port" kindref="compound">Port</ref>&lt;void&gt;<sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classreactor_1_1BasePort" kindref="compound">BasePort</ref><sp/>{</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="93" refid="classreactor_1_1Port_3_01void_01_4_1aa9ab4e50d097ed98354eb6508f4e7085" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>present{</highlight><highlight class="keyword">false</highlight><highlight class="normal">};</highlight></codeline>
<codeline lineno="94"><highlight class="normal"></highlight></codeline>
<codeline lineno="95" refid="classreactor_1_1Port_3_01void_01_4_1aedf8266554cde75e236451d8c512e4c8" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classreactor_1_1Port_3_01void_01_4_1aedf8266554cde75e236451d8c512e4c8" kindref="member">cleanup</ref>()<sp/>override<sp/>final<sp/>{<sp/>present<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="96"><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="98" refid="classreactor_1_1Port_3_01void_01_4_1a2114887bc779a8f035dcf0e21eabd5fd" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classreactor_1_1Port_3_01void_01_4_1a2114887bc779a8f035dcf0e21eabd5fd" kindref="member">Port</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>name,<sp/><ref refid="namespacereactor_1a08c8e2d85e5bc706b1af8a87e40eec6d" kindref="member">PortType</ref><sp/>type,<sp/><ref refid="classreactor_1_1Reactor" kindref="compound">Reactor</ref>*<sp/>container)</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/><ref refid="classreactor_1_1BasePort" kindref="compound">BasePort</ref>(name,<sp/>type,<sp/>container)<sp/>{}</highlight></codeline>
<codeline lineno="100"><highlight class="normal"></highlight></codeline>
<codeline lineno="101" refid="classreactor_1_1Port_3_01void_01_4_1a86c25528d080fe3d1bba83878fd53860" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classreactor_1_1Port_3_01void_01_4_1a86c25528d080fe3d1bba83878fd53860" kindref="member">bind_to</ref>(<ref refid="classreactor_1_1Port_3_01void_01_4" kindref="compound">Port&lt;void&gt;</ref>*<sp/>port)<sp/>{<sp/>base_bind_to(port);<sp/>}</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><ref refid="classreactor_1_1Port_3_01void_01_4" kindref="compound">Port&lt;void&gt;</ref>*<sp/>typed_inward_binding()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::set&lt;Port&lt;void&gt;*&gt;&amp;<sp/>typed_outward_bindings()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="104"><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">set</highlight><highlight class="normal">();</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>is_present()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="107"><highlight class="normal"></highlight></codeline>
<codeline lineno="108" refid="classreactor_1_1Port_3_01void_01_4_1a3a84b8d17b1a43197a753847b0df1777" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classreactor_1_1Port_3_01void_01_4_1a3a84b8d17b1a43197a753847b0df1777" kindref="member">startup</ref>()<sp/>override<sp/>final<sp/>{}</highlight></codeline>
<codeline lineno="109" refid="classreactor_1_1Port_3_01void_01_4_1ad7d9028d091509215b3685e4af95cb03" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classreactor_1_1Port_3_01void_01_4_1ad7d9028d091509215b3685e4af95cb03" kindref="member">shutdown</ref>()<sp/>override<sp/>final<sp/>{}</highlight></codeline>
<codeline lineno="110"><highlight class="normal">};</highlight></codeline>
<codeline lineno="111"><highlight class="normal"></highlight></codeline>
<codeline lineno="112"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="113" refid="classreactor_1_1Input" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classreactor_1_1Input" kindref="compound">Input</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classreactor_1_1Port" kindref="compound">Port</ref>&lt;T&gt;<sp/>{</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="115" refid="classreactor_1_1Input_1a1c035f6840e363d515d92a4a20cd3b6a" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classreactor_1_1Input_1a1c035f6840e363d515d92a4a20cd3b6a" kindref="member">Input</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>name,<sp/><ref refid="classreactor_1_1Reactor" kindref="compound">Reactor</ref>*<sp/>container)</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/><ref refid="classreactor_1_1Port" kindref="compound">Port</ref>&lt;T&gt;(name,<sp/><ref refid="namespacereactor_1a08c8e2d85e5bc706b1af8a87e40eec6d" kindref="member">PortType</ref>::<ref refid="classreactor_1_1Input" kindref="compound">Input</ref>,<sp/>container)<sp/>{}</highlight></codeline>
<codeline lineno="117"><highlight class="normal">};</highlight></codeline>
<codeline lineno="118"><highlight class="normal"></highlight></codeline>
<codeline lineno="119"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="120" refid="classreactor_1_1Output" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">Output<sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classreactor_1_1Port" kindref="compound">Port</ref>&lt;T&gt;<sp/>{</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="122" refid="classreactor_1_1Output_1a82e2c12d69313c406bf2e0e710295670" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classreactor_1_1Output_1a82e2c12d69313c406bf2e0e710295670" kindref="member">Output</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>name,<sp/><ref refid="classreactor_1_1Reactor" kindref="compound">Reactor</ref>*<sp/>container)</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/><ref refid="classreactor_1_1Port" kindref="compound">Port</ref>&lt;T&gt;(name,<sp/><ref refid="namespacereactor_1a08c8e2d85e5bc706b1af8a87e40eec6d" kindref="member">PortType</ref>::Output,<sp/>container)<sp/>{}</highlight></codeline>
<codeline lineno="124"><highlight class="normal">};</highlight></codeline>
<codeline lineno="125"><highlight class="normal"></highlight></codeline>
<codeline lineno="126"><highlight class="normal">}<sp/><sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>reactor</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="127"><highlight class="normal"></highlight></codeline>
<codeline lineno="128"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="port__impl_8hh" kindref="compound">impl/port_impl.hh</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="/home/runner/work/reactor-cpp/reactor-cpp/include/reactor-cpp/port.hh"/>
  </compounddef>
</doxygen>
