<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="value__ptr_8hh" kind="file" language="C++">
    <compoundname>value_ptr.hh</compoundname>
    <includes local="no">memory</includes>
    <includes local="no">type_traits</includes>
    <includedby refid="action_8hh" local="yes">/home/runner/work/reactor-cpp/reactor-cpp/include/reactor-cpp/action.hh</includedby>
    <includedby refid="port_8hh" local="yes">/home/runner/work/reactor-cpp/reactor-cpp/include/reactor-cpp/port.hh</includedby>
    <incdepgraph>
      <node id="353">
        <label>/home/runner/work/reactor-cpp/reactor-cpp/include/reactor-cpp/value_ptr.hh</label>
        <link refid="value__ptr_8hh"/>
        <childnode refid="354" relation="include">
        </childnode>
        <childnode refid="355" relation="include">
        </childnode>
      </node>
      <node id="355">
        <label>type_traits</label>
      </node>
      <node id="354">
        <label>memory</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="360">
        <label>/home/runner/work/reactor-cpp/reactor-cpp/lib/reactor.cc</label>
        <link refid="reactor_8cc"/>
      </node>
      <node id="362">
        <label>/home/runner/work/reactor-cpp/reactor-cpp/include/reactor-cpp/reactor-cpp.hh</label>
        <link refid="reactor-cpp_8hh"/>
      </node>
      <node id="358">
        <label>/home/runner/work/reactor-cpp/reactor-cpp/lib/action.cc</label>
        <link refid="action_8cc"/>
      </node>
      <node id="363">
        <label>/home/runner/work/reactor-cpp/reactor-cpp/include/reactor-cpp/port.hh</label>
        <link refid="port_8hh"/>
        <childnode refid="364" relation="include">
        </childnode>
        <childnode refid="365" relation="include">
        </childnode>
        <childnode refid="359" relation="include">
        </childnode>
        <childnode refid="360" relation="include">
        </childnode>
        <childnode refid="361" relation="include">
        </childnode>
        <childnode refid="362" relation="include">
        </childnode>
      </node>
      <node id="365">
        <label>/home/runner/work/reactor-cpp/reactor-cpp/lib/port.cc</label>
        <link refid="port_8cc"/>
      </node>
      <node id="359">
        <label>/home/runner/work/reactor-cpp/reactor-cpp/lib/reaction.cc</label>
        <link refid="reaction_8cc"/>
      </node>
      <node id="356">
        <label>/home/runner/work/reactor-cpp/reactor-cpp/include/reactor-cpp/value_ptr.hh</label>
        <link refid="value__ptr_8hh"/>
        <childnode refid="357" relation="include">
        </childnode>
        <childnode refid="363" relation="include">
        </childnode>
      </node>
      <node id="364">
        <label>/home/runner/work/reactor-cpp/reactor-cpp/lib/environment.cc</label>
        <link refid="environment_8cc"/>
      </node>
      <node id="361">
        <label>/home/runner/work/reactor-cpp/reactor-cpp/lib/scheduler.cc</label>
        <link refid="scheduler_8cc"/>
      </node>
      <node id="357">
        <label>/home/runner/work/reactor-cpp/reactor-cpp/include/reactor-cpp/action.hh</label>
        <link refid="action_8hh"/>
        <childnode refid="358" relation="include">
        </childnode>
        <childnode refid="359" relation="include">
        </childnode>
        <childnode refid="360" relation="include">
        </childnode>
        <childnode refid="361" relation="include">
        </childnode>
        <childnode refid="362" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <innerclass refid="classreactor_1_1ImmutableValuePtr" prot="public">reactor::ImmutableValuePtr</innerclass>
    <innerclass refid="classreactor_1_1MutableValuePtr" prot="public">reactor::MutableValuePtr</innerclass>
    <innerclass refid="classreactor_1_1ImmutableValuePtr" prot="public">reactor::ImmutableValuePtr</innerclass>
    <innernamespace refid="namespacereactor">reactor</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>(C)<sp/>2019<sp/>TU<sp/>Dresden</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*<sp/>All<sp/>rights<sp/>reserved.</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*<sp/>Authors:</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*<sp/><sp/><sp/>Christian<sp/>Menard</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>once</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;memory&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;type_traits&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespacereactor" kindref="compound">reactor</ref><sp/>{</highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="17" refid="classreactor_1_1ImmutableValuePtr" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classreactor_1_1ImmutableValuePtr" kindref="compound">ImmutableValuePtr</ref>;</highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="20" refid="classreactor_1_1MutableValuePtr" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classreactor_1_1MutableValuePtr" kindref="compound">MutableValuePtr</ref><sp/>{</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="22" refid="classreactor_1_1MutableValuePtr_1a6dfaa60279549db876d8ea8b1135b46a" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="classreactor_1_1MutableValuePtr_1a6dfaa60279549db876d8ea8b1135b46a" kindref="member">type</ref><sp/>=<sp/>T;</highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="25" refid="classreactor_1_1MutableValuePtr_1aa141f1a246bb58b3047eb0d6ac54e2e9" refkind="member"><highlight class="normal"><sp/><sp/>std::unique_ptr&lt;type&gt;<sp/><ref refid="classreactor_1_1MutableValuePtr_1aa141f1a246bb58b3047eb0d6ac54e2e9" kindref="member">internal_ptr</ref>;</highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight></codeline>
<codeline lineno="27" refid="classreactor_1_1MutableValuePtr_1a574ef3eecbb139aa2c814c394d753d4a" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">explicit</highlight><highlight class="normal"><sp/><ref refid="classreactor_1_1MutableValuePtr_1a574ef3eecbb139aa2c814c394d753d4a" kindref="member">MutableValuePtr</ref>(<ref refid="classreactor_1_1MutableValuePtr_1a6dfaa60279549db876d8ea8b1135b46a" kindref="member">type</ref>*<sp/>ptr)<sp/>:<sp/>internal_ptr(ptr)<sp/>{}</highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><ref refid="classreactor_1_1MutableValuePtr_1ac12cb01a82f7c7f4d5097d76713a7a42" kindref="member">MutableValuePtr</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classreactor_1_1MutableValuePtr" kindref="compound">MutableValuePtr</ref>&amp;)<sp/>=<sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><ref refid="classreactor_1_1MutableValuePtr_1ac12cb01a82f7c7f4d5097d76713a7a42" kindref="member">MutableValuePtr</ref>(<ref refid="classreactor_1_1MutableValuePtr" kindref="compound">MutableValuePtr</ref>&amp;&amp;)<sp/>=<sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight></codeline>
<codeline lineno="33" refid="classreactor_1_1MutableValuePtr_1ac12cb01a82f7c7f4d5097d76713a7a42" refkind="member"><highlight class="normal"><sp/><sp/>constexpr<sp/><ref refid="classreactor_1_1MutableValuePtr_1ac12cb01a82f7c7f4d5097d76713a7a42" kindref="member">MutableValuePtr</ref>()<sp/>:<sp/>internal_ptr(nullptr)<sp/>{}</highlight></codeline>
<codeline lineno="34" refid="classreactor_1_1MutableValuePtr_1a74f7e76c461da95e9215be4e5ae9704b" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">explicit</highlight><highlight class="normal"><sp/>constexpr<sp/><ref refid="classreactor_1_1MutableValuePtr_1a74f7e76c461da95e9215be4e5ae9704b" kindref="member">MutableValuePtr</ref>(std::nullptr_t)<sp/>:<sp/>internal_ptr(nullptr)<sp/>{}</highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight></codeline>
<codeline lineno="36" refid="classreactor_1_1MutableValuePtr_1ace0a7bdb60d0da1c13726522485fbe98" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classreactor_1_1MutableValuePtr" kindref="compound">MutableValuePtr</ref>&amp;<sp/><ref refid="classreactor_1_1MutableValuePtr_1ace0a7bdb60d0da1c13726522485fbe98" kindref="member">operator=</ref>(std::nullptr_t)<sp/>{</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;internal_ptr<sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight></codeline>
<codeline lineno="41" refid="classreactor_1_1MutableValuePtr_1ad379c13d736742a08f8b1f31cb9d4426" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classreactor_1_1MutableValuePtr_1a6dfaa60279549db876d8ea8b1135b46a" kindref="member">type</ref>*<sp/></highlight><highlight class="keyword">get</highlight><highlight class="normal">()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>internal_ptr.<ref refid="classreactor_1_1MutableValuePtr_1ad379c13d736742a08f8b1f31cb9d4426" kindref="member">get</ref>();<sp/>}</highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight></codeline>
<codeline lineno="43" refid="classreactor_1_1MutableValuePtr_1a334c0a48458c92a312a02bb7993f221a" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">explicit</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">operator</highlight><highlight class="normal"><sp/>bool()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">get</highlight><highlight class="normal">()<sp/>==<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="44" refid="classreactor_1_1MutableValuePtr_1aed84a12ae50d8c549b021967b375b85d" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classreactor_1_1MutableValuePtr_1a6dfaa60279549db876d8ea8b1135b46a" kindref="member">type</ref>&amp;<sp/><ref refid="classreactor_1_1MutableValuePtr_1aed84a12ae50d8c549b021967b375b85d" kindref="member">operator*</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">get</highlight><highlight class="normal">();<sp/>}</highlight></codeline>
<codeline lineno="45" refid="classreactor_1_1MutableValuePtr_1a67d119e3f850a5384589bbdbd00eb899" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classreactor_1_1MutableValuePtr_1a6dfaa60279549db876d8ea8b1135b46a" kindref="member">type</ref>*<sp/><ref refid="classreactor_1_1MutableValuePtr_1a67d119e3f850a5384589bbdbd00eb899" kindref="member">operator-&gt;</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">get</highlight><highlight class="normal">();<sp/>}</highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight></codeline>
<codeline lineno="47" refid="classreactor_1_1MutableValuePtr_1a4308f7dd79d565a0aa8bfb1375caa412" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">friend</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classreactor_1_1ImmutableValuePtr" kindref="compound">ImmutableValuePtr</ref>&lt;T&gt;;</highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">U,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal">...<sp/>Args&gt;</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">friend</highlight><highlight class="normal"><sp/><ref refid="classreactor_1_1MutableValuePtr" kindref="compound">MutableValuePtr&lt;U&gt;</ref><sp/><ref refid="classreactor_1_1MutableValuePtr_1ace4c49f73d7fc11f60f4979c5b1efbd2" kindref="member">make_mutable_value</ref>(Args&amp;&amp;...<sp/>args);</highlight></codeline>
<codeline lineno="51"><highlight class="normal">};</highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classreactor_1_1ImmutableValuePtr" kindref="compound">ImmutableValuePtr</ref><sp/>{</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="56" refid="classreactor_1_1ImmutableValuePtr_1a88dbe82ff9b732b87e054ee37254bdfa" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="classreactor_1_1ImmutableValuePtr_1a88dbe82ff9b732b87e054ee37254bdfa" kindref="member">type</ref><sp/>=<sp/>T;</highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="59" refid="classreactor_1_1ImmutableValuePtr_1afe0edfdeed222658f79ce58dc2d8a0d6" refkind="member"><highlight class="normal"><sp/><sp/>std::shared_ptr&lt;type&gt;<sp/><ref refid="classreactor_1_1ImmutableValuePtr_1afe0edfdeed222658f79ce58dc2d8a0d6" kindref="member">internal_ptr</ref>;</highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight></codeline>
<codeline lineno="61" refid="classreactor_1_1ImmutableValuePtr_1ae0d6edc13d77e9a68811d200c02fef84" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">explicit</highlight><highlight class="normal"><sp/><ref refid="classreactor_1_1ImmutableValuePtr_1ae0d6edc13d77e9a68811d200c02fef84" kindref="member">ImmutableValuePtr</ref>(<ref refid="classreactor_1_1ImmutableValuePtr_1a88dbe82ff9b732b87e054ee37254bdfa" kindref="member">type</ref>*<sp/>ptr)<sp/>:<sp/>internal_ptr(ptr)<sp/>{}</highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="64" refid="classreactor_1_1ImmutableValuePtr_1aa7bbdefa52d839dbf71a1b8369754356" refkind="member"><highlight class="normal"><sp/><sp/>constexpr<sp/><ref refid="classreactor_1_1ImmutableValuePtr_1aa7bbdefa52d839dbf71a1b8369754356" kindref="member">ImmutableValuePtr</ref>()<sp/>:<sp/>internal_ptr(nullptr)<sp/>{}</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><ref refid="classreactor_1_1ImmutableValuePtr" kindref="compound">ImmutableValuePtr</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classreactor_1_1ImmutableValuePtr" kindref="compound">ImmutableValuePtr</ref>&amp;)<sp/>=<sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><ref refid="classreactor_1_1ImmutableValuePtr" kindref="compound">ImmutableValuePtr</ref>(<ref refid="classreactor_1_1ImmutableValuePtr" kindref="compound">ImmutableValuePtr</ref>&amp;&amp;)<sp/>=<sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight></codeline>
<codeline lineno="68" refid="classreactor_1_1ImmutableValuePtr_1aec3f1f481dc495293453c32f8654b5bc" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">explicit</highlight><highlight class="normal"><sp/>constexpr<sp/><ref refid="classreactor_1_1ImmutableValuePtr_1aec3f1f481dc495293453c32f8654b5bc" kindref="member">ImmutableValuePtr</ref>(std::nullptr_t)</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>internal_ptr(nullptr)<sp/>{}</highlight></codeline>
<codeline lineno="70" refid="classreactor_1_1ImmutableValuePtr_1a7b1b937ccd6dd4875c3737ba2780019f" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">explicit</highlight><highlight class="normal"><sp/><ref refid="classreactor_1_1ImmutableValuePtr_1a7b1b937ccd6dd4875c3737ba2780019f" kindref="member">ImmutableValuePtr</ref>(<ref refid="classreactor_1_1MutableValuePtr" kindref="compound">MutableValuePtr&lt;T&gt;</ref>&amp;&amp;<sp/>ptr)</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>internal_ptr(std::move(ptr.internal_ptr))<sp/>{}</highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight></codeline>
<codeline lineno="73" refid="classreactor_1_1ImmutableValuePtr_1a94521923de3774c88536498461c5fd6b" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classreactor_1_1ImmutableValuePtr" kindref="compound">ImmutableValuePtr</ref>&amp;<sp/><ref refid="classreactor_1_1ImmutableValuePtr_1a94521923de3774c88536498461c5fd6b" kindref="member">operator=</ref>(std::nullptr_t)<sp/>{</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;internal_ptr<sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="77" refid="classreactor_1_1ImmutableValuePtr_1a0cf1105a09d40db7ceae985f9b329a9f" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classreactor_1_1ImmutableValuePtr" kindref="compound">ImmutableValuePtr</ref>&amp;<sp/><ref refid="classreactor_1_1ImmutableValuePtr_1a0cf1105a09d40db7ceae985f9b329a9f" kindref="member">operator=</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classreactor_1_1ImmutableValuePtr" kindref="compound">ImmutableValuePtr</ref>&amp;<sp/>ptr)<sp/>{</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;internal_ptr<sp/>=<sp/>ptr.<ref refid="classreactor_1_1ImmutableValuePtr_1afe0edfdeed222658f79ce58dc2d8a0d6" kindref="member">internal_ptr</ref>;</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="81" refid="classreactor_1_1ImmutableValuePtr_1adeb3de5c3f0dc27613a4b3915f9747e7" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classreactor_1_1ImmutableValuePtr" kindref="compound">ImmutableValuePtr</ref>&amp;<sp/><ref refid="classreactor_1_1ImmutableValuePtr_1adeb3de5c3f0dc27613a4b3915f9747e7" kindref="member">operator=</ref>(<ref refid="classreactor_1_1ImmutableValuePtr" kindref="compound">ImmutableValuePtr</ref>&amp;&amp;<sp/>ptr)<sp/>{</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;internal_ptr<sp/>=<sp/>std::move(ptr.internal_ptr);</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight></codeline>
<codeline lineno="86" refid="classreactor_1_1ImmutableValuePtr_1a65630b7319b433ce022e660866bc27d1" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classreactor_1_1ImmutableValuePtr_1a88dbe82ff9b732b87e054ee37254bdfa" kindref="member">type</ref>*<sp/></highlight><highlight class="keyword">get</highlight><highlight class="normal">()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>internal_ptr.get();<sp/>}</highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight></codeline>
<codeline lineno="88" refid="classreactor_1_1ImmutableValuePtr_1a214067c64b236305411402aa0f332228" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">explicit</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">operator</highlight><highlight class="normal"><sp/>bool()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">get</highlight><highlight class="normal">()<sp/>==<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="89" refid="classreactor_1_1ImmutableValuePtr_1a1cbbf368f886f35c63604424f9b3b393" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classreactor_1_1ImmutableValuePtr_1a88dbe82ff9b732b87e054ee37254bdfa" kindref="member">type</ref>&amp;<sp/><ref refid="classreactor_1_1ImmutableValuePtr_1a1cbbf368f886f35c63604424f9b3b393" kindref="member">operator*</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">get</highlight><highlight class="normal">();<sp/>}</highlight></codeline>
<codeline lineno="90" refid="classreactor_1_1ImmutableValuePtr_1af547b7a43033f0fbe383665c10335173" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classreactor_1_1ImmutableValuePtr_1a88dbe82ff9b732b87e054ee37254bdfa" kindref="member">type</ref>*<sp/><ref refid="classreactor_1_1ImmutableValuePtr_1af547b7a43033f0fbe383665c10335173" kindref="member">operator-&gt;</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">get</highlight><highlight class="normal">();<sp/>}</highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight></codeline>
<codeline lineno="92" refid="classreactor_1_1ImmutableValuePtr_1a642520ceaad885335b2e03e319c59749" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classreactor_1_1MutableValuePtr" kindref="compound">MutableValuePtr&lt;T&gt;</ref><sp/><ref refid="classreactor_1_1ImmutableValuePtr_1a642520ceaad885335b2e03e319c59749" kindref="member">get_mutable_copy</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classreactor_1_1MutableValuePtr" kindref="compound">MutableValuePtr&lt;T&gt;</ref>(</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>T(*internal_ptr));</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">U,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal">...<sp/>Args&gt;</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">friend</highlight><highlight class="normal"><sp/><ref refid="classreactor_1_1ImmutableValuePtr" kindref="compound">ImmutableValuePtr&lt;U&gt;</ref><sp/><ref refid="namespacereactor_1a8757688a143832a418a763d3621b1c4d" kindref="member">make_immutable_value</ref>(Args&amp;&amp;...<sp/>args);</highlight></codeline>
<codeline lineno="98"><highlight class="normal">};</highlight></codeline>
<codeline lineno="99"><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">T,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal">...<sp/>Args&gt;</highlight></codeline>
<codeline lineno="101" refid="namespacereactor_1a8757688a143832a418a763d3621b1c4d" refkind="member"><highlight class="normal"><ref refid="classreactor_1_1ImmutableValuePtr" kindref="compound">ImmutableValuePtr&lt;T&gt;</ref><sp/><ref refid="namespacereactor_1a8757688a143832a418a763d3621b1c4d" kindref="member">make_immutable_value</ref>(Args&amp;&amp;...<sp/>args)<sp/>{</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classreactor_1_1ImmutableValuePtr" kindref="compound">ImmutableValuePtr&lt;T&gt;</ref>(</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>T(std::forward&lt;Args&gt;(args)...));</highlight></codeline>
<codeline lineno="103"><highlight class="normal">}</highlight></codeline>
<codeline lineno="104"><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">T,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal">...<sp/>Args&gt;</highlight></codeline>
<codeline lineno="106" refid="namespacereactor_1ae4fe60384411a317f354245149b85dbc" refkind="member"><highlight class="normal"><ref refid="classreactor_1_1MutableValuePtr" kindref="compound">MutableValuePtr&lt;T&gt;</ref><sp/><ref refid="classreactor_1_1MutableValuePtr_1ace4c49f73d7fc11f60f4979c5b1efbd2" kindref="member">make_mutable_value</ref>(Args&amp;&amp;...<sp/>args)<sp/>{</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classreactor_1_1MutableValuePtr" kindref="compound">MutableValuePtr&lt;T&gt;</ref>(</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>T(std::forward&lt;Args&gt;(args)...));</highlight></codeline>
<codeline lineno="108"><highlight class="normal">}</highlight></codeline>
<codeline lineno="109"><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>U&gt;</highlight></codeline>
<codeline lineno="111" refid="namespacereactor_1ab9c3123244fedcd98c92e38874bee37d" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="namespacereactor_1a0c98d4882f478da43c2c1a169a1fedd2" kindref="member">operator==</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classreactor_1_1MutableValuePtr" kindref="compound">MutableValuePtr&lt;T&gt;</ref>&amp;<sp/>x,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classreactor_1_1MutableValuePtr" kindref="compound">MutableValuePtr&lt;U&gt;</ref>&amp;<sp/>y)<sp/>{</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>x.<ref refid="classreactor_1_1MutableValuePtr_1ad379c13d736742a08f8b1f31cb9d4426" kindref="member">get</ref>()<sp/>==<sp/>y.<ref refid="classreactor_1_1MutableValuePtr_1ad379c13d736742a08f8b1f31cb9d4426" kindref="member">get</ref>();</highlight></codeline>
<codeline lineno="113"><highlight class="normal">}</highlight></codeline>
<codeline lineno="114"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>U&gt;</highlight></codeline>
<codeline lineno="115" refid="namespacereactor_1a2fdf4cb9154560eba99721c91aa766cc" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="namespacereactor_1a0c98d4882f478da43c2c1a169a1fedd2" kindref="member">operator==</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classreactor_1_1ImmutableValuePtr" kindref="compound">ImmutableValuePtr&lt;T&gt;</ref>&amp;<sp/>x,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classreactor_1_1ImmutableValuePtr" kindref="compound">ImmutableValuePtr&lt;U&gt;</ref>&amp;<sp/>y)<sp/>{</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>x.<ref refid="classreactor_1_1ImmutableValuePtr_1a65630b7319b433ce022e660866bc27d1" kindref="member">get</ref>()<sp/>==<sp/>y.<ref refid="classreactor_1_1ImmutableValuePtr_1a65630b7319b433ce022e660866bc27d1" kindref="member">get</ref>();</highlight></codeline>
<codeline lineno="117"><highlight class="normal">}</highlight></codeline>
<codeline lineno="118"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>U&gt;</highlight></codeline>
<codeline lineno="119" refid="namespacereactor_1ab088f033423a22b03f5f6f76ecb04b1b" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="namespacereactor_1a0c98d4882f478da43c2c1a169a1fedd2" kindref="member">operator==</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classreactor_1_1ImmutableValuePtr" kindref="compound">ImmutableValuePtr&lt;T&gt;</ref>&amp;<sp/>x,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classreactor_1_1MutableValuePtr" kindref="compound">MutableValuePtr&lt;U&gt;</ref>&amp;<sp/>y)<sp/>{</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>x.<ref refid="classreactor_1_1ImmutableValuePtr_1a65630b7319b433ce022e660866bc27d1" kindref="member">get</ref>()<sp/>==<sp/>y.<ref refid="classreactor_1_1MutableValuePtr_1ad379c13d736742a08f8b1f31cb9d4426" kindref="member">get</ref>();</highlight></codeline>
<codeline lineno="121"><highlight class="normal">}</highlight></codeline>
<codeline lineno="122"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>U&gt;</highlight></codeline>
<codeline lineno="123" refid="namespacereactor_1a9079eb51590f5e096fc3d8cfb073540f" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="namespacereactor_1a0c98d4882f478da43c2c1a169a1fedd2" kindref="member">operator==</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classreactor_1_1MutableValuePtr" kindref="compound">MutableValuePtr&lt;T&gt;</ref>&amp;<sp/>x,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classreactor_1_1ImmutableValuePtr" kindref="compound">ImmutableValuePtr&lt;U&gt;</ref>&amp;<sp/>y)<sp/>{</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>x.<ref refid="classreactor_1_1MutableValuePtr_1ad379c13d736742a08f8b1f31cb9d4426" kindref="member">get</ref>()<sp/>==<sp/>y.<ref refid="classreactor_1_1ImmutableValuePtr_1a65630b7319b433ce022e660866bc27d1" kindref="member">get</ref>();</highlight></codeline>
<codeline lineno="125"><highlight class="normal">}</highlight></codeline>
<codeline lineno="126"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="127" refid="namespacereactor_1a2155cd0a1349ccb36b00bb369443a084" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="namespacereactor_1a0c98d4882f478da43c2c1a169a1fedd2" kindref="member">operator==</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classreactor_1_1MutableValuePtr" kindref="compound">MutableValuePtr&lt;T&gt;</ref>&amp;<sp/>x,<sp/>std::nullptr_t)<sp/>{</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>x.<ref refid="classreactor_1_1MutableValuePtr_1ad379c13d736742a08f8b1f31cb9d4426" kindref="member">get</ref>()<sp/>==<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="129"><highlight class="normal">}</highlight></codeline>
<codeline lineno="130"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="131" refid="namespacereactor_1a1c5731f8ed4863bfeaaeeba72f5eb765" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="namespacereactor_1a0c98d4882f478da43c2c1a169a1fedd2" kindref="member">operator==</ref>(std::nullptr_t,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classreactor_1_1MutableValuePtr" kindref="compound">MutableValuePtr&lt;T&gt;</ref>&amp;<sp/>x)<sp/>{</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>x.<ref refid="classreactor_1_1MutableValuePtr_1ad379c13d736742a08f8b1f31cb9d4426" kindref="member">get</ref>()<sp/>==<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="133"><highlight class="normal">}</highlight></codeline>
<codeline lineno="134"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="135" refid="namespacereactor_1ab3fb80a815368302fcd1985b0fee5a6c" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="namespacereactor_1a0c98d4882f478da43c2c1a169a1fedd2" kindref="member">operator==</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classreactor_1_1ImmutableValuePtr" kindref="compound">ImmutableValuePtr&lt;T&gt;</ref>&amp;<sp/>x,<sp/>std::nullptr_t)<sp/>{</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>x.<ref refid="classreactor_1_1ImmutableValuePtr_1a65630b7319b433ce022e660866bc27d1" kindref="member">get</ref>()<sp/>==<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="137"><highlight class="normal">}</highlight></codeline>
<codeline lineno="138"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="139" refid="namespacereactor_1a59010e2c0f2dd0420fb59abab0a20e10" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="namespacereactor_1a0c98d4882f478da43c2c1a169a1fedd2" kindref="member">operator==</ref>(std::nullptr_t,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classreactor_1_1ImmutableValuePtr" kindref="compound">ImmutableValuePtr&lt;T&gt;</ref>&amp;<sp/>x)<sp/>{</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>x.<ref refid="classreactor_1_1ImmutableValuePtr_1a65630b7319b433ce022e660866bc27d1" kindref="member">get</ref>()<sp/>==<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="141"><highlight class="normal">}</highlight></codeline>
<codeline lineno="142"><highlight class="normal"></highlight></codeline>
<codeline lineno="143"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>U&gt;</highlight></codeline>
<codeline lineno="144" refid="namespacereactor_1a73f7e0bf8b9c8adf7cac8ecc521de7c7" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="namespacereactor_1a550a07297e731136c8d7570395c5128d" kindref="member">operator!=</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classreactor_1_1MutableValuePtr" kindref="compound">MutableValuePtr&lt;T&gt;</ref>&amp;<sp/>x,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classreactor_1_1MutableValuePtr" kindref="compound">MutableValuePtr&lt;U&gt;</ref>&amp;<sp/>y)<sp/>{</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>x.<ref refid="classreactor_1_1MutableValuePtr_1ad379c13d736742a08f8b1f31cb9d4426" kindref="member">get</ref>()<sp/>!=<sp/>y.<ref refid="classreactor_1_1MutableValuePtr_1ad379c13d736742a08f8b1f31cb9d4426" kindref="member">get</ref>();</highlight></codeline>
<codeline lineno="146"><highlight class="normal">}</highlight></codeline>
<codeline lineno="147"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>U&gt;</highlight></codeline>
<codeline lineno="148" refid="namespacereactor_1a79f6e5da337bd260b36b8e702160f1e6" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="namespacereactor_1a550a07297e731136c8d7570395c5128d" kindref="member">operator!=</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classreactor_1_1ImmutableValuePtr" kindref="compound">ImmutableValuePtr&lt;T&gt;</ref>&amp;<sp/>x,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classreactor_1_1ImmutableValuePtr" kindref="compound">ImmutableValuePtr&lt;U&gt;</ref>&amp;<sp/>y)<sp/>{</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>x.<ref refid="classreactor_1_1ImmutableValuePtr_1a65630b7319b433ce022e660866bc27d1" kindref="member">get</ref>()<sp/>!=<sp/>y.<ref refid="classreactor_1_1ImmutableValuePtr_1a65630b7319b433ce022e660866bc27d1" kindref="member">get</ref>();</highlight></codeline>
<codeline lineno="150"><highlight class="normal">}</highlight></codeline>
<codeline lineno="151"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>U&gt;</highlight></codeline>
<codeline lineno="152" refid="namespacereactor_1a247d25ed08296b3afc70c88f7f2e3b5e" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="namespacereactor_1a550a07297e731136c8d7570395c5128d" kindref="member">operator!=</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classreactor_1_1ImmutableValuePtr" kindref="compound">ImmutableValuePtr&lt;T&gt;</ref>&amp;<sp/>x,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classreactor_1_1MutableValuePtr" kindref="compound">MutableValuePtr&lt;U&gt;</ref>&amp;<sp/>y)<sp/>{</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>x.<ref refid="classreactor_1_1ImmutableValuePtr_1a65630b7319b433ce022e660866bc27d1" kindref="member">get</ref>()<sp/>!=<sp/>y.<ref refid="classreactor_1_1MutableValuePtr_1ad379c13d736742a08f8b1f31cb9d4426" kindref="member">get</ref>();</highlight></codeline>
<codeline lineno="154"><highlight class="normal">}</highlight></codeline>
<codeline lineno="155"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>U&gt;</highlight></codeline>
<codeline lineno="156" refid="namespacereactor_1a71b00843b7797d6a9d52c3e0b85a06a7" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="namespacereactor_1a550a07297e731136c8d7570395c5128d" kindref="member">operator!=</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classreactor_1_1MutableValuePtr" kindref="compound">MutableValuePtr&lt;T&gt;</ref>&amp;<sp/>x,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classreactor_1_1ImmutableValuePtr" kindref="compound">ImmutableValuePtr&lt;U&gt;</ref>&amp;<sp/>y)<sp/>{</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>x.<ref refid="classreactor_1_1MutableValuePtr_1ad379c13d736742a08f8b1f31cb9d4426" kindref="member">get</ref>()<sp/>!=<sp/>y.<ref refid="classreactor_1_1ImmutableValuePtr_1a65630b7319b433ce022e660866bc27d1" kindref="member">get</ref>();</highlight></codeline>
<codeline lineno="158"><highlight class="normal">}</highlight></codeline>
<codeline lineno="159"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="160" refid="namespacereactor_1aeef65c8dea31e1e64d5488fbd5be4f5f" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="namespacereactor_1a550a07297e731136c8d7570395c5128d" kindref="member">operator!=</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classreactor_1_1MutableValuePtr" kindref="compound">MutableValuePtr&lt;T&gt;</ref>&amp;<sp/>x,<sp/>std::nullptr_t)<sp/>{</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>x.<ref refid="classreactor_1_1MutableValuePtr_1ad379c13d736742a08f8b1f31cb9d4426" kindref="member">get</ref>()<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="162"><highlight class="normal">}</highlight></codeline>
<codeline lineno="163"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="164" refid="namespacereactor_1a43398d2b182f1f579ce7d26b88c8ca97" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="namespacereactor_1a550a07297e731136c8d7570395c5128d" kindref="member">operator!=</ref>(std::nullptr_t,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classreactor_1_1MutableValuePtr" kindref="compound">MutableValuePtr&lt;T&gt;</ref>&amp;<sp/>x)<sp/>{</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>x.<ref refid="classreactor_1_1MutableValuePtr_1ad379c13d736742a08f8b1f31cb9d4426" kindref="member">get</ref>()<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="166"><highlight class="normal">}</highlight></codeline>
<codeline lineno="167"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="168" refid="namespacereactor_1ace39af7a63437facb0d3a59aa87e59b8" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="namespacereactor_1a550a07297e731136c8d7570395c5128d" kindref="member">operator!=</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classreactor_1_1ImmutableValuePtr" kindref="compound">ImmutableValuePtr&lt;T&gt;</ref>&amp;<sp/>x,<sp/>std::nullptr_t)<sp/>{</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>x.<ref refid="classreactor_1_1ImmutableValuePtr_1a65630b7319b433ce022e660866bc27d1" kindref="member">get</ref>()<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="170"><highlight class="normal">}</highlight></codeline>
<codeline lineno="171"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="172" refid="namespacereactor_1a84d02734e8877c36a53e02a6228348bf" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="namespacereactor_1a550a07297e731136c8d7570395c5128d" kindref="member">operator!=</ref>(std::nullptr_t,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classreactor_1_1ImmutableValuePtr" kindref="compound">ImmutableValuePtr&lt;T&gt;</ref>&amp;<sp/>x)<sp/>{</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>x.<ref refid="classreactor_1_1ImmutableValuePtr_1a65630b7319b433ce022e660866bc27d1" kindref="member">get</ref>()<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="174"><highlight class="normal">}</highlight></codeline>
<codeline lineno="175"><highlight class="normal"></highlight></codeline>
<codeline lineno="176"><highlight class="normal">}<sp/><sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>reactor</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="/home/runner/work/reactor-cpp/reactor-cpp/include/reactor-cpp/value_ptr.hh"/>
  </compounddef>
</doxygen>
