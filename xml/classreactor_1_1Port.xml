<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="classreactor_1_1Port" kind="class" language="C++" prot="public">
    <compoundname>reactor::Port</compoundname>
    <basecompoundref refid="classreactor_1_1BasePort" prot="public" virt="non-virtual">reactor::BasePort</basecompoundref>
    <derivedcompoundref refid="classreactor_1_1Input" prot="public" virt="non-virtual">reactor::Input&lt; T &gt;</derivedcompoundref>
    <derivedcompoundref refid="classreactor_1_1Output" prot="public" virt="non-virtual">reactor::Output&lt; T &gt;</derivedcompoundref>
    <includes refid="fwd_8hh" local="no">fwd.hh</includes>
    <templateparamlist>
      <param>
        <type>class</type>
        <declname>T</declname>
        <defname>T</defname>
      </param>
    </templateparamlist>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classreactor_1_1Port_1adb40730eea54b529168a70cf8ed933c7" prot="private" static="no" mutable="no">
        <type><ref refid="classreactor_1_1ImmutableValuePtr" kindref="compound">ImmutableValuePtr</ref>&lt; T &gt;</type>
        <definition>ImmutableValuePtr&lt;T&gt; reactor::Port&lt; T &gt;::value_ptr</definition>
        <argsstring></argsstring>
        <name>value_ptr</name>
        <initializer>{nullptr}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/reactor-cpp/reactor-cpp/include/reactor-cpp/port.hh" line="64" column="1" bodyfile="/home/runner/work/reactor-cpp/reactor-cpp/include/reactor-cpp/port.hh" bodystart="64" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="classreactor_1_1Port_1a05fdfca6fac003412700103e04ee66fd" prot="private" static="no" const="no" explicit="no" inline="yes" final="yes" virt="virtual">
        <type>void</type>
        <definition>void reactor::Port&lt; T &gt;::cleanup</definition>
        <argsstring>() override final</argsstring>
        <name>cleanup</name>
        <reimplements refid="classreactor_1_1BasePort_1afe81e6747077349da4c420a873783579">cleanup</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/reactor-cpp/reactor-cpp/include/reactor-cpp/port.hh" line="66" column="1" bodyfile="/home/runner/work/reactor-cpp/reactor-cpp/include/reactor-cpp/port.hh" bodystart="66" bodyend="66"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classreactor_1_1Port_1a5cd32eff95f2606d94adc482bf6944af" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>reactor::Port&lt; T &gt;::Port</definition>
        <argsstring>(const std::string &amp;name, PortType type, Reactor *container)</argsstring>
        <name>Port</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>name</declname>
        </param>
        <param>
          <type><ref refid="namespacereactor_1a08c8e2d85e5bc706b1af8a87e40eec6d" kindref="member">PortType</ref></type>
          <declname>type</declname>
        </param>
        <param>
          <type><ref refid="classreactor_1_1Reactor" kindref="compound">Reactor</ref> *</type>
          <declname>container</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/reactor-cpp/reactor-cpp/include/reactor-cpp/port.hh" line="69" column="1" bodyfile="/home/runner/work/reactor-cpp/reactor-cpp/include/reactor-cpp/port.hh" bodystart="69" bodyend="70"/>
      </memberdef>
      <memberdef kind="function" id="classreactor_1_1Port_1a71e1c6fe14a7a6566bc5d5342fa9d16d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void reactor::Port&lt; T &gt;::bind_to</definition>
        <argsstring>(Port&lt; T &gt; *port)</argsstring>
        <name>bind_to</name>
        <param>
          <type><ref refid="classreactor_1_1Port" kindref="compound">Port</ref>&lt; T &gt; *</type>
          <declname>port</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/reactor-cpp/reactor-cpp/include/reactor-cpp/port.hh" line="72" column="1" bodyfile="/home/runner/work/reactor-cpp/reactor-cpp/include/reactor-cpp/port.hh" bodystart="72" bodyend="72"/>
      </memberdef>
      <memberdef kind="function" id="classreactor_1_1Port_1a22d0ef9cd82989e03a669aeccf8e694a" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classreactor_1_1Port" kindref="compound">Port</ref>&lt; T &gt; *</type>
        <definition>Port&lt; T &gt; * reactor::Port&lt; T &gt;::typed_inward_binding</definition>
        <argsstring>() const</argsstring>
        <name>typed_inward_binding</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/reactor-cpp/reactor-cpp/include/reactor-cpp/port.hh" line="73" column="1" bodyfile="/home/runner/work/reactor-cpp/reactor-cpp/include/reactor-cpp/impl/port_impl.hh" bodystart="23" bodyend="25"/>
      </memberdef>
      <memberdef kind="function" id="classreactor_1_1Port_1a4d3f681f3f3e0ef75988c3790eb24a17" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const std::set&lt; <ref refid="classreactor_1_1Port" kindref="compound">Port</ref>&lt; T &gt; * &gt; &amp;</type>
        <definition>const std::set&lt; Port&lt; T &gt; * &gt; &amp; reactor::Port&lt; T &gt;::typed_outward_bindings</definition>
        <argsstring>() const</argsstring>
        <name>typed_outward_bindings</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/reactor-cpp/reactor-cpp/include/reactor-cpp/port.hh" line="74" column="1" bodyfile="/home/runner/work/reactor-cpp/reactor-cpp/include/reactor-cpp/impl/port_impl.hh" bodystart="15" bodyend="20"/>
      </memberdef>
      <memberdef kind="function" id="classreactor_1_1Port_1ac3d03f90b425a8656911ed3acf462a4d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void reactor::Port&lt; T &gt;::set</definition>
        <argsstring>(const ImmutableValuePtr&lt; T &gt; &amp;value_ptr)</argsstring>
        <name>set</name>
        <param>
          <type>const <ref refid="classreactor_1_1ImmutableValuePtr" kindref="compound">ImmutableValuePtr</ref>&lt; T &gt; &amp;</type>
          <declname>value_ptr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/reactor-cpp/reactor-cpp/include/reactor-cpp/port.hh" line="76" column="1" bodyfile="/home/runner/work/reactor-cpp/reactor-cpp/include/reactor-cpp/impl/port_impl.hh" bodystart="28" bodyend="35"/>
      </memberdef>
      <memberdef kind="function" id="classreactor_1_1Port_1a041b16e47f5b67305ec215513ea92b23" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void reactor::Port&lt; T &gt;::set</definition>
        <argsstring>(MutableValuePtr&lt; T &gt; &amp;&amp;value_ptr)</argsstring>
        <name>set</name>
        <param>
          <type><ref refid="classreactor_1_1MutableValuePtr" kindref="compound">MutableValuePtr</ref>&lt; T &gt; &amp;&amp;</type>
          <declname>value_ptr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/reactor-cpp/reactor-cpp/include/reactor-cpp/port.hh" line="77" column="1" bodyfile="/home/runner/work/reactor-cpp/reactor-cpp/include/reactor-cpp/port.hh" bodystart="77" bodyend="79"/>
      </memberdef>
      <memberdef kind="function" id="classreactor_1_1Port_1ac75bc82e495f182037d5f7273fc75491" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void reactor::Port&lt; T &gt;::set</definition>
        <argsstring>(const T &amp;value)</argsstring>
        <name>set</name>
        <param>
          <type>const T &amp;</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/reactor-cpp/reactor-cpp/include/reactor-cpp/port.hh" line="80" column="1" bodyfile="/home/runner/work/reactor-cpp/reactor-cpp/include/reactor-cpp/port.hh" bodystart="80" bodyend="80"/>
      </memberdef>
      <memberdef kind="function" id="classreactor_1_1Port_1a9f742e8839c5061c21f890c1ca5fca6b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void reactor::Port&lt; T &gt;::set</definition>
        <argsstring>(T &amp;&amp;value)</argsstring>
        <name>set</name>
        <param>
          <type>T &amp;&amp;</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/reactor-cpp/reactor-cpp/include/reactor-cpp/port.hh" line="81" column="1" bodyfile="/home/runner/work/reactor-cpp/reactor-cpp/include/reactor-cpp/port.hh" bodystart="81" bodyend="81"/>
      </memberdef>
      <memberdef kind="function" id="classreactor_1_1Port_1ae182b2b10c53f2a21c424437dfc2b40e" prot="public" static="no" const="no" explicit="no" inline="yes" final="yes" virt="virtual">
        <type>void</type>
        <definition>void reactor::Port&lt; T &gt;::startup</definition>
        <argsstring>() override final</argsstring>
        <name>startup</name>
        <reimplements refid="classreactor_1_1ReactorElement_1a8cb574cb20ff963903ad905fb0a157e3">startup</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/reactor-cpp/reactor-cpp/include/reactor-cpp/port.hh" line="83" column="1" bodyfile="/home/runner/work/reactor-cpp/reactor-cpp/include/reactor-cpp/port.hh" bodystart="83" bodyend="83"/>
      </memberdef>
      <memberdef kind="function" id="classreactor_1_1Port_1a3d440102c643fd98d17b4cf8714c910d" prot="public" static="no" const="no" explicit="no" inline="yes" final="yes" virt="virtual">
        <type>void</type>
        <definition>void reactor::Port&lt; T &gt;::shutdown</definition>
        <argsstring>() override final</argsstring>
        <name>shutdown</name>
        <reimplements refid="classreactor_1_1ReactorElement_1a8fce084bef582156979ebba56737e907">shutdown</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/reactor-cpp/reactor-cpp/include/reactor-cpp/port.hh" line="84" column="1" bodyfile="/home/runner/work/reactor-cpp/reactor-cpp/include/reactor-cpp/port.hh" bodystart="84" bodyend="84"/>
      </memberdef>
      <memberdef kind="function" id="classreactor_1_1Port_1aac7650bcd4a119063858a0dddb5d58aa" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const <ref refid="classreactor_1_1ImmutableValuePtr" kindref="compound">ImmutableValuePtr</ref>&lt; T &gt; &amp;</type>
        <definition>const ImmutableValuePtr&lt; T &gt; &amp; reactor::Port&lt; T &gt;::get</definition>
        <argsstring>() const</argsstring>
        <name>get</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/reactor-cpp/reactor-cpp/include/reactor-cpp/port.hh" line="86" column="1" bodyfile="/home/runner/work/reactor-cpp/reactor-cpp/include/reactor-cpp/impl/port_impl.hh" bodystart="38" bodyend="44"/>
      </memberdef>
      <memberdef kind="function" id="classreactor_1_1Port_1ab4ab58fa62258a9e79b061ecd3f55946" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool reactor::Port&lt; T &gt;::is_present</definition>
        <argsstring>() const</argsstring>
        <name>is_present</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/reactor-cpp/reactor-cpp/include/reactor-cpp/port.hh" line="87" column="1" bodyfile="/home/runner/work/reactor-cpp/reactor-cpp/include/reactor-cpp/impl/port_impl.hh" bodystart="47" bodyend="53"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="125">
        <label>reactor::Port&lt; T &gt;</label>
        <link refid="classreactor_1_1Port"/>
        <childnode refid="126" relation="public-inheritance">
        </childnode>
      </node>
      <node id="126">
        <label>reactor::BasePort</label>
        <link refid="classreactor_1_1BasePort"/>
        <childnode refid="127" relation="public-inheritance">
        </childnode>
      </node>
      <node id="127">
        <label>reactor::ReactorElement</label>
        <link refid="classreactor_1_1ReactorElement"/>
      </node>
      <node id="128">
        <label>reactor::Input&lt; T &gt;</label>
        <link refid="classreactor_1_1Input"/>
        <childnode refid="125" relation="public-inheritance">
        </childnode>
      </node>
      <node id="129">
        <label>reactor::Output&lt; T &gt;</label>
        <link refid="classreactor_1_1Output"/>
        <childnode refid="125" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="130">
        <label>reactor::Port&lt; T &gt;</label>
        <link refid="classreactor_1_1Port"/>
        <childnode refid="131" relation="public-inheritance">
        </childnode>
      </node>
      <node id="131">
        <label>reactor::BasePort</label>
        <link refid="classreactor_1_1BasePort"/>
        <childnode refid="132" relation="public-inheritance">
        </childnode>
        <childnode refid="131" relation="usage">
          <edgelabel>_inward_binding</edgelabel>
        </childnode>
      </node>
      <node id="132">
        <label>reactor::ReactorElement</label>
        <link refid="classreactor_1_1ReactorElement"/>
        <childnode refid="133" relation="usage">
          <edgelabel>_container</edgelabel>
        </childnode>
        <childnode refid="134" relation="usage">
          <edgelabel>_environment</edgelabel>
        </childnode>
      </node>
      <node id="134">
        <label>reactor::Environment</label>
        <link refid="classreactor_1_1Environment"/>
        <childnode refid="135" relation="usage">
          <edgelabel>_scheduler</edgelabel>
        </childnode>
      </node>
      <node id="136">
        <label>reactor::LogicalTime</label>
        <link refid="classreactor_1_1LogicalTime"/>
      </node>
      <node id="133">
        <label>reactor::Reactor</label>
        <link refid="classreactor_1_1Reactor"/>
        <childnode refid="132" relation="public-inheritance">
        </childnode>
      </node>
      <node id="135">
        <label>reactor::Scheduler</label>
        <link refid="classreactor_1_1Scheduler"/>
        <childnode refid="136" relation="usage">
          <edgelabel>_logical_time</edgelabel>
        </childnode>
        <childnode refid="134" relation="usage">
          <edgelabel>_environment</edgelabel>
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/home/runner/work/reactor-cpp/reactor-cpp/include/reactor-cpp/fwd.hh" line="24" column="1" bodyfile="/home/runner/work/reactor-cpp/reactor-cpp/include/reactor-cpp/fwd.hh" bodystart="24" bodyend="-1"/>
    <listofallmembers>
      <member refid="classreactor_1_1BasePort_1a9158ab37ab600ea2b8a39749ca9404c4" prot="public" virt="non-virtual"><scope>reactor::Port</scope><name>antidependencies</name></member>
      <member refid="classreactor_1_1BasePort_1a58886ca9004547c85b06e7803d0530b1" prot="protected" virt="non-virtual"><scope>reactor::Port</scope><name>base_bind_to</name></member>
      <member refid="classreactor_1_1BasePort_1abf23bbb8fdd982044fca7d253ca1d851" prot="protected" virt="non-virtual"><scope>reactor::Port</scope><name>BasePort</name></member>
      <member refid="classreactor_1_1Port_1a71e1c6fe14a7a6566bc5d5342fa9d16d" prot="public" virt="non-virtual"><scope>reactor::Port</scope><name>bind_to</name></member>
      <member refid="classreactor_1_1Port_1a05fdfca6fac003412700103e04ee66fd" prot="private" virt="virtual"><scope>reactor::Port</scope><name>cleanup</name></member>
      <member refid="classreactor_1_1ReactorElement_1a25bf298de879a82eefc1ba426be05812" prot="public" virt="non-virtual"><scope>reactor::Port</scope><name>container</name></member>
      <member refid="classreactor_1_1BasePort_1aab124dee21981b289b55c2e2c8e3922d" prot="public" virt="non-virtual"><scope>reactor::Port</scope><name>dependencies</name></member>
      <member refid="classreactor_1_1ReactorElement_1a895b09f977450723c59b67b41e643db8" prot="public" virt="non-virtual"><scope>reactor::Port</scope><name>environment</name></member>
      <member refid="classreactor_1_1ReactorElement_1af57b89113cd189208ea95668ad5bd141" prot="public" virt="non-virtual"><scope>reactor::Port</scope><name>fqn</name></member>
      <member refid="classreactor_1_1Port_1aac7650bcd4a119063858a0dddb5d58aa" prot="public" virt="non-virtual"><scope>reactor::Port</scope><name>get</name></member>
      <member refid="classreactor_1_1BasePort_1a0c046ef79ccf68f8a68f788df774aed3" prot="public" virt="non-virtual"><scope>reactor::Port</scope><name>has_antidependencies</name></member>
      <member refid="classreactor_1_1BasePort_1a687c0460c4823d90d150c6a363e256a9" prot="public" virt="non-virtual"><scope>reactor::Port</scope><name>has_dependencies</name></member>
      <member refid="classreactor_1_1BasePort_1a8d8a93a2d15683d29ec7a4ec483db01a" prot="public" virt="non-virtual"><scope>reactor::Port</scope><name>has_inward_binding</name></member>
      <member refid="classreactor_1_1BasePort_1a397f8bbc24835a01bfad591abb85bcb4" prot="public" virt="non-virtual"><scope>reactor::Port</scope><name>has_outward_bindings</name></member>
      <member refid="classreactor_1_1BasePort_1af4a42f14f878509c00bb16d0c5b2c201" prot="public" virt="non-virtual"><scope>reactor::Port</scope><name>inward_binding</name></member>
      <member refid="classreactor_1_1BasePort_1ad488760a5ed50b9bbf137d4e52c053f7" prot="public" virt="non-virtual"><scope>reactor::Port</scope><name>is_input</name></member>
      <member refid="classreactor_1_1BasePort_1ad5ebded21426bfcf02359b1ab3fdf7d8" prot="public" virt="non-virtual"><scope>reactor::Port</scope><name>is_output</name></member>
      <member refid="classreactor_1_1Port_1ab4ab58fa62258a9e79b061ecd3f55946" prot="public" virt="non-virtual"><scope>reactor::Port</scope><name>is_present</name></member>
      <member refid="classreactor_1_1ReactorElement_1a29c516a59fd1ccc43fa0023c550b6964" prot="public" virt="non-virtual"><scope>reactor::Port</scope><name>is_top_level</name></member>
      <member refid="classreactor_1_1ReactorElement_1a99579f61dbaf5d5d98aebfe26eb8bf77" prot="public" virt="non-virtual"><scope>reactor::Port</scope><name>name</name></member>
      <member refid="classreactor_1_1BasePort_1aaf404379c3908577b7fc7e394d5c972c" prot="public" virt="non-virtual"><scope>reactor::Port</scope><name>outward_bindings</name></member>
      <member refid="classreactor_1_1Port_1a5cd32eff95f2606d94adc482bf6944af" prot="public" virt="non-virtual"><scope>reactor::Port</scope><name>Port</name></member>
      <member refid="classreactor_1_1ReactorElement_1aebc8c1cabcadca08400284fdb05ce746" prot="public" virt="non-virtual"><scope>reactor::Port</scope><name>ReactorElement</name></member>
      <member refid="classreactor_1_1ReactorElement_1ac5f85a8322de3fad7191a8f749b507fd" prot="public" virt="non-virtual"><scope>reactor::Port</scope><name>ReactorElement</name></member>
      <member refid="classreactor_1_1ReactorElement_1aa975574e21f5f7a4bb761f04ed57dfa4" prot="public" virt="non-virtual"><scope>reactor::Port</scope><name>ReactorElement</name></member>
      <member refid="classreactor_1_1ReactorElement_1a2ba6e1e309233db7cfc124563f9f8f9f" prot="public" virt="non-virtual"><scope>reactor::Port</scope><name>ReactorElement</name></member>
      <member refid="classreactor_1_1BasePort_1a1a9831f2c5dfb36c1c0987ab7dcdd608" prot="protected" virt="non-virtual"><scope>reactor::Port</scope><name>register_antidependency</name></member>
      <member refid="classreactor_1_1BasePort_1a781809b23cbb205087867bddbd077e17" prot="protected" virt="non-virtual"><scope>reactor::Port</scope><name>register_dependency</name></member>
      <member refid="classreactor_1_1Port_1ac3d03f90b425a8656911ed3acf462a4d" prot="public" virt="non-virtual"><scope>reactor::Port</scope><name>set</name></member>
      <member refid="classreactor_1_1Port_1a041b16e47f5b67305ec215513ea92b23" prot="public" virt="non-virtual"><scope>reactor::Port</scope><name>set</name></member>
      <member refid="classreactor_1_1Port_1ac75bc82e495f182037d5f7273fc75491" prot="public" virt="non-virtual"><scope>reactor::Port</scope><name>set</name></member>
      <member refid="classreactor_1_1Port_1a9f742e8839c5061c21f890c1ca5fca6b" prot="public" virt="non-virtual"><scope>reactor::Port</scope><name>set</name></member>
      <member refid="classreactor_1_1Port_1a3d440102c643fd98d17b4cf8714c910d" prot="public" virt="virtual"><scope>reactor::Port</scope><name>shutdown</name></member>
      <member refid="classreactor_1_1Port_1ae182b2b10c53f2a21c424437dfc2b40e" prot="public" virt="virtual"><scope>reactor::Port</scope><name>startup</name></member>
      <member refid="classreactor_1_1BasePort_1a71208c7024e39242b1012091daf7b7ed" prot="public" virt="non-virtual"><scope>reactor::Port</scope><name>triggers</name></member>
      <member refid="classreactor_1_1ReactorElement_1a9291659e2893372cfea42ffccfd487b2" prot="public" virt="non-virtual"><scope>reactor::Port</scope><name>Type</name></member>
      <member refid="classreactor_1_1Port_1a22d0ef9cd82989e03a669aeccf8e694a" prot="public" virt="non-virtual"><scope>reactor::Port</scope><name>typed_inward_binding</name></member>
      <member refid="classreactor_1_1Port_1a4d3f681f3f3e0ef75988c3790eb24a17" prot="public" virt="non-virtual"><scope>reactor::Port</scope><name>typed_outward_bindings</name></member>
      <member refid="classreactor_1_1Port_1adb40730eea54b529168a70cf8ed933c7" prot="private" virt="non-virtual"><scope>reactor::Port</scope><name>value_ptr</name></member>
      <member refid="classreactor_1_1ReactorElement_1ac9075040ad83b1945f75f3065c0405fa" prot="public" virt="virtual"><scope>reactor::Port</scope><name>~ReactorElement</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
